-- phpMyAdmin SQL Dump
-- version 4.7.0
-- https://www.phpmyadmin.net/
--
-- Host: localhost
-- Generation Time: 2017-05-25 04:27:25
-- 服务器版本： 5.6.17
-- PHP Version: 5.5.12

SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;
SET time_zone = "+00:00";


/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8mb4 */;

--
-- Database: `ojcoder`
--

-- --------------------------------------------------------

--
-- 表的结构 `problems`
--

CREATE TABLE `problems` (
  `id` smallint(4) NOT NULL,
  `platform` varchar(20) CHARACTER SET utf8 NOT NULL,
  `number` smallint(4) NOT NULL,
  `title` text CHARACTER SET utf8 NOT NULL,
  `slink` text CHARACTER SET utf8 NOT NULL,
  `cpp` tinyint(1) NOT NULL DEFAULT '0',
  `java` tinyint(1) NOT NULL DEFAULT '0',
  `python` tinyint(1) NOT NULL DEFAULT '0',
  `difficulty` varchar(10) CHARACTER SET utf8 DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=latin1;

--
-- 转存表中的数据 `problems`
--

INSERT INTO `problems` (`id`, `platform`, `number`, `title`, `slink`, `cpp`, `java`, `python`, `difficulty`) VALUES
(1001, 'LeetCode', 1, 'Two Sum', 'two-sum', 3, 2, 1, 'Easy'),
(1002, 'LeetCode', 2, 'Add Two Numbers', 'add-two-numbers', 2, 1, 1, 'Medium'),
(1003, 'LeetCode', 3, 'Longest Substring Without Repeating Characters', 'longest-substring-without-repeating-characters', 2, 0, 1, 'Medium'),
(1004, 'LeetCode', 4, 'Median of Two Sorted Arrays', 'median-of-two-sorted-arrays', 0, 0, 0, 'Hard'),
(1005, 'LeetCode', 5, 'Longest Palindromic Substring', 'longest-palindromic-substring', 0, 0, 1, 'Medium'),
(1006, 'LeetCode', 6, 'ZigZag Conversion', 'zigzag-conversion', 0, 0, 0, 'Medium'),
(1007, 'LeetCode', 7, 'Reverse Integer', 'reverse-integer', 0, 0, 0, 'Easy'),
(1008, 'LeetCode', 8, 'String to Integer (atoi)', 'string-to-integer-atoi', 0, 0, 0, 'Medium'),
(1009, 'LeetCode', 9, 'Palindrome Number', 'palindrome-number', 0, 0, 1, 'Easy'),
(1010, 'LeetCode', 10, 'Regular Expression Matching', 'regular-expression-matching', 0, 0, 0, 'Hard'),
(1011, 'LeetCode', 11, 'Container With Most Water', 'container-with-most-water', 0, 0, 0, 'Medium'),
(1012, 'LeetCode', 12, 'Integer to Roman', 'integer-to-roman', 0, 0, 0, 'Medium'),
(1013, 'LeetCode', 13, 'Roman to Integer', 'roman-to-integer', 0, 0, 0, 'Easy'),
(1014, 'LeetCode', 14, 'Longest Common Prefix', 'longest-common-prefix', 0, 0, 0, 'Easy'),
(1015, 'LeetCode', 15, '3Sum', '3sum', 1, 0, 0, 'Medium'),
(1016, 'LeetCode', 16, '3Sum Closest', '3sum-closest', 1, 0, 0, 'Medium'),
(1017, 'LeetCode', 17, 'Letter Combinations of a Phone Number', 'letter-combinations-of-a-phone-number', 0, 0, 0, 'Medium'),
(1018, 'LeetCode', 18, '4Sum', '4sum', 1, 0, 0, 'Medium'),
(1019, 'LeetCode', 19, 'Remove Nth Node From End of List', 'remove-nth-node-from-end-of-list', 0, 0, 0, 'Medium'),
(1020, 'LeetCode', 20, 'Valid Parentheses', 'valid-parentheses', 1, 1, 1, 'Easy'),
(1021, 'LeetCode', 21, 'Merge Two Sorted Lists', 'merge-two-sorted-lists', 0, 0, 0, 'Easy'),
(1022, 'LeetCode', 22, 'Generate Parentheses', 'generate-parentheses', 0, 0, 1, 'Medium'),
(1023, 'LeetCode', 23, 'Merge k Sorted Lists', 'merge-k-sorted-lists', 0, 0, 0, 'Hard'),
(1024, 'LeetCode', 24, 'Swap Nodes in Pairs', 'swap-nodes-in-pairs', 0, 0, 0, 'Medium'),
(1025, 'LeetCode', 25, 'Reverse Nodes in k-Group', 'reverse-nodes-in-k-group', 0, 0, 0, 'Hard'),
(1026, 'LeetCode', 26, 'Remove Duplicates from Sorted Array', 'remove-duplicates-from-sorted-array', 0, 0, 1, 'Easy'),
(1027, 'LeetCode', 27, 'Remove Element', 'remove-element', 0, 0, 0, 'Easy'),
(1028, 'LeetCode', 28, 'Implement strStr()', 'implement-strstr', 0, 0, 0, 'Easy'),
(1029, 'LeetCode', 29, 'Divide Two Integers', 'divide-two-integers', 0, 0, 0, 'Medium'),
(1030, 'LeetCode', 30, 'Substring with Concatenation of All Words', 'substring-with-concatenation-of-all-words', 0, 0, 0, 'Hard'),
(1031, 'LeetCode', 31, 'Next Permutation', 'next-permutation', 0, 0, 0, 'Medium'),
(1032, 'LeetCode', 32, 'Longest Valid Parentheses', 'longest-valid-parentheses', 0, 0, 0, 'Hard'),
(1033, 'LeetCode', 33, 'Search in Rotated Sorted Array', 'search-in-rotated-sorted-array', 0, 0, 0, 'Medium'),
(1034, 'LeetCode', 34, 'Search for a Range', 'search-for-a-range', 0, 0, 0, 'Medium'),
(1035, 'LeetCode', 35, 'Search Insert Position', 'search-insert-position', 0, 0, 0, 'Easy'),
(1036, 'LeetCode', 36, 'Valid Sudoku', 'valid-sudoku', 0, 0, 1, 'Medium'),
(1037, 'LeetCode', 37, 'Sudoku Solver', 'sudoku-solver', 0, 0, 0, 'Hard'),
(1038, 'LeetCode', 38, 'Count and Say', 'count-and-say', 0, 0, 0, 'Easy'),
(1039, 'LeetCode', 39, 'Combination Sum', 'combination-sum', 0, 0, 0, 'Medium'),
(1040, 'LeetCode', 40, 'Combination Sum II', 'combination-sum-ii', 0, 0, 0, 'Medium'),
(1041, 'LeetCode', 41, 'First Missing Positive', 'first-missing-positive', 0, 0, 0, 'Hard'),
(1042, 'LeetCode', 42, 'Trapping Rain Water', 'trapping-rain-water', 0, 0, 0, 'Hard'),
(1043, 'LeetCode', 43, 'Multiply Strings', 'multiply-strings', 0, 0, 0, 'Medium'),
(1044, 'LeetCode', 44, 'Wildcard Matching', 'wildcard-matching', 0, 0, 0, 'Hard'),
(1045, 'LeetCode', 45, 'Jump Game II', 'jump-game-ii', 0, 0, 0, 'Hard'),
(1046, 'LeetCode', 46, 'Permutations', 'permutations', 0, 0, 0, 'Medium'),
(1047, 'LeetCode', 47, 'Permutations II', 'permutations-ii', 0, 0, 0, 'Medium'),
(1048, 'LeetCode', 48, 'Rotate Image', 'rotate-image', 0, 0, 0, 'Medium'),
(1049, 'LeetCode', 49, 'Group Anagrams', 'group-anagrams', 1, 0, 0, 'Medium'),
(1050, 'LeetCode', 50, 'Pow(x, n)', 'powx-n', 0, 0, 0, 'Medium'),
(1051, 'LeetCode', 51, 'N-Queens', 'n-queens', 0, 0, 0, 'Hard'),
(1052, 'LeetCode', 52, 'N-Queens II', 'n-queens-ii', 0, 0, 0, 'Hard'),
(1053, 'LeetCode', 53, 'Maximum Subarray', 'maximum-subarray', 1, 1, 0, 'Easy'),
(1054, 'LeetCode', 54, 'Spiral Matrix', 'spiral-matrix', 0, 0, 0, 'Medium'),
(1055, 'LeetCode', 55, 'Jump Game', 'jump-game', 0, 0, 0, 'Medium'),
(1056, 'LeetCode', 56, 'Merge Intervals', 'merge-intervals', 0, 0, 0, 'Medium'),
(1057, 'LeetCode', 57, 'Insert Interval', 'insert-interval', 0, 0, 0, 'Hard'),
(1058, 'LeetCode', 58, 'Length of Last Word', 'length-of-last-word', 0, 0, 0, 'Easy'),
(1059, 'LeetCode', 59, 'Spiral Matrix II', 'spiral-matrix-ii', 0, 0, 0, 'Medium'),
(1060, 'LeetCode', 60, 'Permutation Sequence', 'permutation-sequence', 0, 0, 0, 'Medium'),
(1061, 'LeetCode', 61, 'Rotate List', 'rotate-list', 0, 0, 0, 'Medium'),
(1062, 'LeetCode', 62, 'Unique Paths', 'unique-paths', 0, 0, 0, 'Medium'),
(1063, 'LeetCode', 63, 'Unique Paths II', 'unique-paths-ii', 0, 0, 0, 'Medium'),
(1064, 'LeetCode', 64, 'Minimum Path Sum', 'minimum-path-sum', 0, 0, 0, 'Medium'),
(1065, 'LeetCode', 65, 'Valid Number', 'valid-number', 0, 0, 1, 'Hard'),
(1066, 'LeetCode', 66, 'Plus One', 'plus-one', 0, 0, 0, 'Easy'),
(1067, 'LeetCode', 67, 'Add Binary', 'add-binary', 1, 0, 0, 'Easy'),
(1068, 'LeetCode', 68, 'Text Justification', 'text-justification', 0, 0, 0, 'Hard'),
(1069, 'LeetCode', 69, 'Sqrt(x)', 'sqrtx', 0, 0, 1, 'Easy'),
(1070, 'LeetCode', 70, 'Climbing Stairs', 'climbing-stairs', 0, 0, 0, 'Easy'),
(1071, 'LeetCode', 71, 'Simplify Path', 'simplify-path', 0, 0, 0, 'Medium'),
(1072, 'LeetCode', 72, 'Edit Distance', 'edit-distance', 0, 0, 0, 'Hard'),
(1073, 'LeetCode', 73, 'Set Matrix Zeroes', 'set-matrix-zeroes', 0, 0, 0, 'Medium'),
(1074, 'LeetCode', 74, 'Search a 2D Matrix', 'search-a-2d-matrix', 0, 0, 0, 'Medium'),
(1075, 'LeetCode', 75, 'Sort Colors', 'sort-colors', 0, 0, 0, 'Medium'),
(1076, 'LeetCode', 76, 'Minimum Window Substring', 'minimum-window-substring', 0, 0, 1, 'Hard'),
(1077, 'LeetCode', 77, 'Combinations', 'combinations', 0, 0, 0, 'Medium'),
(1078, 'LeetCode', 78, 'Subsets', 'subsets', 0, 0, 0, 'Medium'),
(1079, 'LeetCode', 79, 'Word Search', 'word-search', 0, 0, 1, 'Medium'),
(1080, 'LeetCode', 80, 'Remove Duplicates from Sorted Array II', 'remove-duplicates-from-sorted-array-ii', 0, 0, 0, 'Medium'),
(1081, 'LeetCode', 81, 'Search in Rotated Sorted Array II', 'search-in-rotated-sorted-array-ii', 0, 0, 0, 'Medium'),
(1082, 'LeetCode', 82, 'Remove Duplicates from Sorted List II', 'remove-duplicates-from-sorted-list-ii', 0, 0, 0, 'Medium'),
(1083, 'LeetCode', 83, 'Remove Duplicates from Sorted List', 'remove-duplicates-from-sorted-list', 0, 0, 0, 'Easy'),
(1084, 'LeetCode', 84, 'Largest Rectangle in Histogram', 'largest-rectangle-in-histogram', 0, 0, 0, 'Hard'),
(1085, 'LeetCode', 85, 'Maximal Rectangle', 'maximal-rectangle', 0, 0, 0, 'Hard'),
(1086, 'LeetCode', 86, 'Partition List', 'partition-list', 0, 0, 0, 'Medium'),
(1087, 'LeetCode', 87, 'Scramble String', 'scramble-string', 0, 0, 0, 'Hard'),
(1088, 'LeetCode', 88, 'Merge Sorted Array', 'merge-sorted-array', 0, 0, 0, 'Easy'),
(1089, 'LeetCode', 89, 'Gray Code', 'gray-code', 0, 0, 0, 'Medium'),
(1090, 'LeetCode', 90, 'Subsets II', 'subsets-ii', 0, 0, 0, 'Medium'),
(1091, 'LeetCode', 91, 'Decode Ways', 'decode-ways', 0, 0, 0, 'Medium'),
(1092, 'LeetCode', 92, 'Reverse Linked List II', 'reverse-linked-list-ii', 0, 0, 0, 'Medium'),
(1093, 'LeetCode', 93, 'Restore IP Addresses', 'restore-ip-addresses', 0, 0, 0, 'Medium'),
(1094, 'LeetCode', 94, 'Binary Tree Inorder Traversal', 'binary-tree-inorder-traversal', 1, 0, 0, 'Medium'),
(1095, 'LeetCode', 95, 'Unique Binary Search Trees II', 'unique-binary-search-trees-ii', 0, 0, 1, 'Medium'),
(1096, 'LeetCode', 96, 'Unique Binary Search Trees', 'unique-binary-search-trees', 0, 0, 0, 'Medium'),
(1097, 'LeetCode', 97, 'Interleaving String', 'interleaving-string', 0, 0, 0, 'Hard'),
(1098, 'LeetCode', 98, 'Validate Binary Search Tree', 'validate-binary-search-tree', 0, 0, 0, 'Medium'),
(1099, 'LeetCode', 99, 'Recover Binary Search Tree', 'recover-binary-search-tree', 0, 0, 0, 'Hard'),
(1100, 'LeetCode', 100, 'Same Tree', 'same-tree', 0, 1, 1, 'Easy'),
(1101, 'LeetCode', 101, 'Symmetric Tree', 'symmetric-tree', 1, 1, 1, 'Easy'),
(1102, 'LeetCode', 102, 'Binary Tree Level Order Traversal', 'binary-tree-level-order-traversal', 1, 0, 1, 'Medium'),
(1103, 'LeetCode', 103, 'Binary Tree Zigzag Level Order Traversal', 'binary-tree-zigzag-level-order-traversal', 1, 0, 1, 'Medium'),
(1104, 'LeetCode', 104, 'Maximum Depth of Binary Tree', 'maximum-depth-of-binary-tree', 0, 1, 1, 'Easy'),
(1105, 'LeetCode', 105, 'Construct Binary Tree from Preorder and Inorder Traversal', 'construct-binary-tree-from-preorder-and-inorder-traversal', 0, 0, 0, 'Medium'),
(1106, 'LeetCode', 106, 'Construct Binary Tree from Inorder and Postorder Traversal', 'construct-binary-tree-from-inorder-and-postorder-traversal', 0, 0, 1, 'Medium'),
(1107, 'LeetCode', 107, 'Binary Tree Level Order Traversal II', 'binary-tree-level-order-traversal-ii', 1, 0, 0, 'Easy'),
(1108, 'LeetCode', 108, 'Convert Sorted Array to Binary Search Tree', 'convert-sorted-array-to-binary-search-tree', 0, 0, 0, 'Easy'),
(1109, 'LeetCode', 109, 'Convert Sorted List to Binary Search Tree', 'convert-sorted-list-to-binary-search-tree', 0, 0, 0, 'Medium'),
(1110, 'LeetCode', 110, 'Balanced Binary Tree', 'balanced-binary-tree', 1, 0, 0, 'Easy'),
(1111, 'LeetCode', 111, 'Minimum Depth of Binary Tree', 'minimum-depth-of-binary-tree', 0, 0, 0, 'Easy'),
(1112, 'LeetCode', 112, 'Path Sum', 'path-sum', 0, 0, 0, 'Easy'),
(1113, 'LeetCode', 113, 'Path Sum II', 'path-sum-ii', 0, 0, 0, 'Medium'),
(1114, 'LeetCode', 114, 'Flatten Binary Tree to Linked List', 'flatten-binary-tree-to-linked-list', 0, 0, 0, 'Medium'),
(1115, 'LeetCode', 115, 'Distinct Subsequences', 'distinct-subsequences', 0, 0, 0, 'Hard'),
(1116, 'LeetCode', 116, 'Populating Next Right Pointers in Each Node', 'populating-next-right-pointers-in-each-node', 0, 0, 0, 'Medium'),
(1117, 'LeetCode', 117, 'Populating Next Right Pointers in Each Node II', 'populating-next-right-pointers-in-each-node-ii', 0, 0, 0, 'Medium'),
(1118, 'LeetCode', 118, 'Pascal\'s Triangle', 'pascal\'s-triangle', 0, 0, 0, 'Easy'),
(1119, 'LeetCode', 119, 'Pascal\'s Triangle II', 'pascal\'s-triangle-ii', 0, 0, 0, 'Easy'),
(1120, 'LeetCode', 120, 'Triangle', 'triangle', 0, 0, 0, 'Medium'),
(1121, 'LeetCode', 121, 'Best Time to Buy and Sell Stock', 'best-time-to-buy-and-sell-stock', 2, 1, 1, 'Easy'),
(1122, 'LeetCode', 122, 'Best Time to Buy and Sell Stock II', 'best-time-to-buy-and-sell-stock-ii', 1, 0, 0, 'Easy'),
(1123, 'LeetCode', 123, 'Best Time to Buy and Sell Stock III', 'best-time-to-buy-and-sell-stock-iii', 1, 0, 0, 'Hard'),
(1124, 'LeetCode', 124, 'Binary Tree Maximum Path Sum', 'binary-tree-maximum-path-sum', 1, 0, 1, 'Hard'),
(1125, 'LeetCode', 125, 'Valid Palindrome', 'valid-palindrome', 0, 0, 0, 'Easy'),
(1126, 'LeetCode', 126, 'Word Ladder II', 'word-ladder-ii', 0, 0, 0, 'Hard'),
(1127, 'LeetCode', 127, 'Word Ladder', 'word-ladder', 0, 0, 1, 'Medium'),
(1128, 'LeetCode', 128, 'Longest Consecutive Sequence', 'longest-consecutive-sequence', 0, 0, 1, 'Hard'),
(1129, 'LeetCode', 129, 'Sum Root to Leaf Numbers', 'sum-root-to-leaf-numbers', 0, 0, 1, 'Medium'),
(1130, 'LeetCode', 130, 'Surrounded Regions', 'surrounded-regions', 0, 0, 0, 'Medium'),
(1131, 'LeetCode', 131, 'Palindrome Partitioning', 'palindrome-partitioning', 0, 0, 0, 'Medium'),
(1132, 'LeetCode', 132, 'Palindrome Partitioning II', 'palindrome-partitioning-ii', 0, 0, 0, 'Hard'),
(1133, 'LeetCode', 133, 'Clone Graph', 'clone-graph', 0, 0, 0, 'Medium'),
(1134, 'LeetCode', 134, 'Gas Station', 'gas-station', 0, 0, 0, 'Medium'),
(1135, 'LeetCode', 135, 'Candy', 'candy', 0, 0, 0, 'Hard'),
(1136, 'LeetCode', 136, 'Single Number', 'single-number', 1, 1, 1, 'Easy'),
(1137, 'LeetCode', 137, 'Single Number II', 'single-number-ii', 0, 0, 0, 'Medium'),
(1138, 'LeetCode', 138, 'Copy List with Random Pointer', 'copy-list-with-random-pointer', 1, 1, 1, 'Medium'),
(1139, 'LeetCode', 139, 'Word Break', 'word-break', 0, 0, 0, 'Medium'),
(1140, 'LeetCode', 140, 'Word Break II', 'word-break-ii', 0, 0, 0, 'Hard'),
(1141, 'LeetCode', 141, 'Linked List Cycle', 'linked-list-cycle', 1, 1, 1, 'Easy'),
(1142, 'LeetCode', 142, 'Linked List Cycle II', 'linked-list-cycle-ii', 0, 0, 0, 'Medium'),
(1143, 'LeetCode', 143, 'Reorder List', 'reorder-list', 0, 0, 0, 'Medium'),
(1144, 'LeetCode', 144, 'Binary Tree Preorder Traversal', 'binary-tree-preorder-traversal', 1, 0, 0, 'Medium'),
(1145, 'LeetCode', 145, 'Binary Tree Postorder Traversal', 'binary-tree-postorder-traversal', 1, 0, 0, 'Hard'),
(1146, 'LeetCode', 146, 'LRU Cache', 'lru-cache', 1, 1, 1, 'Hard'),
(1147, 'LeetCode', 147, 'Insertion Sort List', 'insertion-sort-list', 0, 0, 0, 'Medium'),
(1148, 'LeetCode', 148, 'Sort List', 'sort-list', 0, 0, 0, 'Medium'),
(1149, 'LeetCode', 149, 'Max Points on a Line', 'max-points-on-a-line', 0, 0, 0, 'Hard'),
(1150, 'LeetCode', 150, 'Evaluate Reverse Polish Notation', 'evaluate-reverse-polish-notation', 0, 0, 0, 'Medium'),
(1151, 'LeetCode', 151, 'Reverse Words in a String', 'reverse-words-in-a-string', 0, 0, 0, 'Medium'),
(1152, 'LeetCode', 152, 'Maximum Product Subarray', 'maximum-product-subarray', 0, 0, 0, 'Medium'),
(1153, 'LeetCode', 153, 'Find Minimum in Rotated Sorted Array', 'find-minimum-in-rotated-sorted-array', 0, 0, 0, 'Medium'),
(1154, 'LeetCode', 154, 'Find Minimum in Rotated Sorted Array II', 'find-minimum-in-rotated-sorted-array-ii', 0, 0, 0, 'Hard'),
(1155, 'LeetCode', 155, 'Min Stack', 'min-stack', 0, 0, 0, 'Easy'),
(1156, 'LeetCode', 156, 'Binary Tree Upside Down', 'binary-tree-upside-down', 1, 0, 1, 'Medium'),
(1157, 'LeetCode', 157, 'Read N Characters Given Read4', 'read-n-characters-given-read4', 1, 0, 0, 'Easy'),
(1158, 'LeetCode', 158, 'Read N Characters Given Read4 II - Call multiple times', 'read-n-characters-given-read4-ii-call-multiple-times', 0, 0, 0, 'Hard'),
(1159, 'LeetCode', 159, 'Longest Substring with At Most Two Distinct Characters', 'longest-substring-with-at-most-two-distinct-characters', 0, 0, 1, 'Hard'),
(1160, 'LeetCode', 160, 'Intersection of Two Linked Lists', 'intersection-of-two-linked-lists', 1, 1, 1, 'Easy'),
(1161, 'LeetCode', 161, 'One Edit Distance', 'one-edit-distance', 0, 0, 1, 'Medium'),
(1162, 'LeetCode', 162, 'Find Peak Element', 'find-peak-element', 0, 0, 0, 'Medium'),
(1163, 'LeetCode', 163, 'Missing Ranges', 'missing-ranges', 1, 0, 1, 'Medium'),
(1164, 'LeetCode', 164, 'Maximum Gap', 'maximum-gap', 0, 0, 0, 'Hard'),
(1165, 'LeetCode', 165, 'Compare Version Numbers', 'compare-version-numbers', 0, 0, 0, 'Medium'),
(1166, 'LeetCode', 166, 'Fraction to Recurring Decimal', 'fraction-to-recurring-decimal', 0, 0, 1, 'Medium'),
(1167, 'LeetCode', 167, 'Two Sum II - Input array is sorted', 'two-sum-ii-input-array-is-sorted', 1, 1, 1, 'Easy'),
(1168, 'LeetCode', 168, 'Excel Sheet Column Title', 'excel-sheet-column-title', 0, 0, 0, 'Easy'),
(1169, 'LeetCode', 169, 'Majority Element', 'majority-element', 0, 0, 0, 'Easy'),
(1170, 'LeetCode', 170, 'Two Sum III - Data structure design', 'two-sum-iii-data-structure-design', 0, 0, 1, 'Easy'),
(1171, 'LeetCode', 171, 'Excel Sheet Column Number', 'excel-sheet-column-number', 0, 0, 0, 'Easy'),
(1172, 'LeetCode', 172, 'Factorial Trailing Zeroes', 'factorial-trailing-zeroes', 0, 0, 1, 'Easy'),
(1173, 'LeetCode', 173, 'Binary Search Tree Iterator', 'binary-search-tree-iterator', 1, 0, 0, 'Medium'),
(1174, 'LeetCode', 174, 'Dungeon Game', 'dungeon-game', 0, 0, 0, 'Hard'),
(1179, 'LeetCode', 179, 'Largest Number', 'largest-number', 0, 0, 0, 'Medium'),
(1186, 'LeetCode', 186, 'Reverse Words in a String II', 'reverse-words-in-a-string-ii', 1, 1, 1, 'Medium'),
(1187, 'LeetCode', 187, 'Repeated DNA Sequences', 'repeated-dna-sequences', 0, 0, 0, 'Medium'),
(1188, 'LeetCode', 188, 'Best Time to Buy and Sell Stock IV', 'best-time-to-buy-and-sell-stock-iv', 1, 0, 0, 'Hard'),
(1189, 'LeetCode', 189, 'Rotate Array', 'rotate-array', 0, 0, 0, 'Easy'),
(1190, 'LeetCode', 190, 'Reverse Bits', 'reverse-bits', 0, 0, 0, 'Easy'),
(1191, 'LeetCode', 191, 'Number of 1 Bits', 'number-of-1-bits', 1, 1, 1, 'Easy'),
(1198, 'LeetCode', 198, 'House Robber', 'house-robber', 0, 0, 0, 'Easy'),
(1199, 'LeetCode', 199, 'Binary Tree Right Side View', 'binary-tree-right-side-view', 1, 0, 0, 'Medium'),
(1200, 'LeetCode', 200, 'Number of Islands', 'number-of-islands', 1, 1, 1, 'Medium'),
(1201, 'LeetCode', 201, 'Bitwise AND of Numbers Range', 'bitwise-and-of-numbers-range', 1, 0, 0, 'Medium'),
(1202, 'LeetCode', 202, 'Happy Number', 'happy-number', 0, 0, 0, 'Easy'),
(1203, 'LeetCode', 203, 'Remove Linked List Elements', 'remove-linked-list-elements', 0, 0, 0, 'Easy'),
(1204, 'LeetCode', 204, 'Count Primes', 'count-primes', 0, 0, 0, 'Easy'),
(1205, 'LeetCode', 205, 'Isomorphic Strings', 'isomorphic-strings', 0, 0, 0, 'Easy'),
(1206, 'LeetCode', 206, 'Reverse Linked List', 'reverse-linked-list', 0, 1, 0, 'Easy'),
(1207, 'LeetCode', 207, 'Course Schedule', 'course-schedule', 0, 0, 0, 'Medium'),
(1208, 'LeetCode', 208, 'Implement Trie (Prefix Tree)', 'implement-trie-prefix-tree', 0, 0, 0, 'Medium'),
(1209, 'LeetCode', 209, 'Minimum Size Subarray Sum', 'minimum-size-subarray-sum', 0, 0, 1, 'Medium'),
(1210, 'LeetCode', 210, 'Course Schedule II', 'course-schedule-ii', 0, 0, 0, 'Medium'),
(1211, 'LeetCode', 211, 'Add and Search Word - Data structure design', 'add-and-search-word-data-structure-design', 1, 0, 0, 'Medium'),
(1212, 'LeetCode', 212, 'Word Search II', 'word-search-ii', 0, 0, 0, 'Hard'),
(1213, 'LeetCode', 213, 'House Robber II', 'house-robber-ii', 0, 0, 0, 'Medium'),
(1214, 'LeetCode', 214, 'Shortest Palindrome', 'shortest-palindrome', 0, 0, 0, 'Hard'),
(1215, 'LeetCode', 215, 'Kth Largest Element in an Array', 'kth-largest-element-in-an-array', 0, 0, 0, 'Medium'),
(1216, 'LeetCode', 216, 'Combination Sum III', 'combination-sum-iii', 0, 0, 0, 'Medium'),
(1217, 'LeetCode', 217, 'Contains Duplicate', 'contains-duplicate', 1, 1, 0, 'Easy'),
(1218, 'LeetCode', 218, 'The Skyline Problem', 'the-skyline-problem', 0, 0, 0, 'Hard'),
(1219, 'LeetCode', 219, 'Contains Duplicate II', 'contains-duplicate-ii', 0, 0, 0, 'Easy'),
(1220, 'LeetCode', 220, 'Contains Duplicate III', 'contains-duplicate-iii', 0, 0, 0, 'Medium'),
(1221, 'LeetCode', 221, 'Maximal Square', 'maximal-square', 0, 0, 0, 'Medium'),
(1222, 'LeetCode', 222, 'Count Complete Tree Nodes', 'count-complete-tree-nodes', 0, 0, 0, 'Medium'),
(1223, 'LeetCode', 223, 'Rectangle Area', 'rectangle-area', 1, 1, 1, 'Medium'),
(1224, 'LeetCode', 224, 'Basic Calculator', 'basic-calculator', 1, 0, 0, 'Hard'),
(1225, 'LeetCode', 225, 'Implement Stack using Queues', 'implement-stack-using-queues', 0, 0, 0, 'Easy'),
(1226, 'LeetCode', 226, 'Invert Binary Tree', 'invert-binary-tree', 1, 1, 1, 'Easy'),
(1227, 'LeetCode', 227, 'Basic Calculator II', 'basic-calculator-ii', 1, 0, 0, 'Medium'),
(1228, 'LeetCode', 228, 'Summary Ranges', 'summary-ranges', 0, 0, 0, 'Medium'),
(1229, 'LeetCode', 229, 'Majority Element II', 'majority-element-ii', 0, 0, 0, 'Medium'),
(1230, 'LeetCode', 230, 'Kth Smallest Element in a BST', 'kth-smallest-element-in-a-bst', 0, 0, 0, 'Medium'),
(1231, 'LeetCode', 231, 'Power of Two', 'power-of-two', 0, 0, 0, 'Easy'),
(1232, 'LeetCode', 232, 'Implement Queue using Stacks', 'implement-queue-using-stacks', 0, 0, 0, 'Easy'),
(1233, 'LeetCode', 233, 'Number of Digit One', 'number-of-digit-one', 0, 0, 0, 'Hard'),
(1234, 'LeetCode', 234, 'Palindrome Linked List', 'palindrome-linked-list', 0, 0, 0, 'Easy'),
(1235, 'LeetCode', 235, 'Lowest Common Ancestor of a Binary Search Tree', 'lowest-common-ancestor-of-a-binary-search-tree', 1, 1, 1, 'Easy'),
(1236, 'LeetCode', 236, 'Lowest Common Ancestor of a Binary Tree', 'lowest-common-ancestor-of-a-binary-tree', 1, 1, 1, 'Medium'),
(1237, 'LeetCode', 237, 'Delete Node in a Linked List', 'delete-node-in-a-linked-list', 1, 1, 1, 'Easy'),
(1238, 'LeetCode', 238, 'Product of Array Except Self', 'product-of-array-except-self', 1, 1, 1, 'Medium'),
(1239, 'LeetCode', 239, 'Sliding Window Maximum', 'sliding-window-maximum', 0, 0, 1, 'Hard'),
(1240, 'LeetCode', 240, 'Search a 2D Matrix II', 'search-a-2d-matrix-ii', 0, 0, 0, 'Medium'),
(1241, 'LeetCode', 241, 'Different Ways to Add Parentheses', 'different-ways-to-add-parentheses', 0, 0, 0, 'Medium'),
(1242, 'LeetCode', 242, 'Valid Anagram', 'valid-anagram', 1, 0, 0, 'Easy'),
(1243, 'LeetCode', 243, 'Shortest Word Distance', 'shortest-word-distance', 1, 1, 1, 'Easy'),
(1244, 'LeetCode', 244, 'Shortest Word Distance II', 'shortest-word-distance-ii', 0, 0, 1, 'Medium'),
(1245, 'LeetCode', 245, 'Shortest Word Distance III', 'shortest-word-distance-iii', 0, 0, 1, 'Medium'),
(1246, 'LeetCode', 246, 'Strobogrammatic Number', 'strobogrammatic-number', 0, 0, 1, 'Easy'),
(1247, 'LeetCode', 247, 'Strobogrammatic Number II', 'strobogrammatic-number-ii', 0, 0, 1, 'Medium'),
(1248, 'LeetCode', 248, 'Strobogrammatic Number III', 'strobogrammatic-number-iii', 0, 0, 1, 'Hard'),
(1249, 'LeetCode', 249, 'Group Shifted Strings', 'group-shifted-strings', 0, 0, 1, 'Medium'),
(1250, 'LeetCode', 250, 'Count Univalue Subtrees', 'count-univalue-subtrees', 0, 0, 1, 'Medium'),
(1251, 'LeetCode', 251, 'Flatten 2D Vector', 'flatten-2d-vector', 0, 0, 1, 'Medium'),
(1252, 'LeetCode', 252, 'Meeting Rooms', 'meeting-rooms', 1, 1, 1, 'Easy'),
(1253, 'LeetCode', 253, 'Meeting Rooms II', 'meeting-rooms-ii', 0, 0, 1, 'Medium'),
(1254, 'LeetCode', 254, 'Factor Combinations', 'factor-combinations', 0, 0, 1, 'Medium'),
(1255, 'LeetCode', 255, 'Verify Preorder Sequence in Binary Search Tree', 'verify-preorder-sequence-in-binary-search-tree', 0, 0, 1, 'Medium'),
(1256, 'LeetCode', 256, 'Paint House', 'paint-house', 1, 1, 1, 'Easy'),
(1257, 'LeetCode', 257, 'Binary Tree Paths', 'binary-tree-paths', 1, 1, 1, 'Easy'),
(1258, 'LeetCode', 258, 'Add Digits', 'add-digits', 2, 1, 1, 'Easy'),
(1259, 'LeetCode', 259, '3Sum Smaller', '3sum-smaller', 1, 1, 1, 'Medium'),
(1260, 'LeetCode', 260, 'Single Number III', 'single-number-iii', 0, 1, 0, 'Medium'),
(1261, 'LeetCode', 261, 'Graph Valid Tree', 'graph-valid-tree', 0, 0, 0, 'Medium'),
(1263, 'LeetCode', 263, 'Ugly Number', 'ugly-number', 0, 0, 1, 'Easy'),
(1264, 'LeetCode', 264, 'Ugly Number II', 'ugly-number-ii', 0, 0, 0, 'Medium'),
(1265, 'LeetCode', 265, 'Paint House II', 'paint-house-ii', 0, 0, 0, 'Hard'),
(1266, 'LeetCode', 266, 'Palindrome Permutation', 'palindrome-permutation', 1, 1, 1, 'Easy'),
(1267, 'LeetCode', 267, 'Palindrome Permutation II', 'palindrome-permutation-ii', 0, 0, 0, 'Medium'),
(1268, 'LeetCode', 268, 'Missing Number', 'missing-number', 1, 1, 1, 'Easy'),
(1269, 'LeetCode', 269, 'Alien Dictionary', 'alien-dictionary', 0, 0, 0, 'Hard'),
(1270, 'LeetCode', 270, 'Closest Binary Search Tree Value', 'closest-binary-search-tree-value', 1, 1, 1, 'Easy'),
(1271, 'LeetCode', 271, 'Encode and Decode Strings', 'encode-and-decode-strings', 0, 0, 1, 'Medium'),
(1272, 'LeetCode', 272, 'Closest Binary Search Tree Value II', 'closest-binary-search-tree-value-ii', 0, 0, 0, 'Hard'),
(1273, 'LeetCode', 273, 'Integer to English Words', 'integer-to-english-words', 0, 0, 0, 'Hard'),
(1274, 'LeetCode', 274, 'H-Index', 'h-index', 0, 0, 1, 'Medium'),
(1275, 'LeetCode', 275, 'H-Index II', 'h-index-ii', 0, 0, 0, 'Medium'),
(1276, 'LeetCode', 276, 'Paint Fence', 'paint-fence', 0, 0, 1, 'Easy'),
(1277, 'LeetCode', 277, 'Find the Celebrity', 'find-the-celebrity', 0, 0, 1, 'Medium'),
(1278, 'LeetCode', 278, 'First Bad Version', 'first-bad-version', 0, 0, 0, 'Easy'),
(1279, 'LeetCode', 279, 'Perfect Squares', 'perfect-squares', 0, 0, 0, 'Medium'),
(1280, 'LeetCode', 280, 'Wiggle Sort', 'wiggle-sort', 1, 1, 1, 'Medium'),
(1281, 'LeetCode', 281, 'Zigzag Iterator', 'zigzag-iterator', 0, 0, 1, 'Medium'),
(1282, 'LeetCode', 282, 'Expression Add Operators', 'expression-add-operators', 0, 0, 0, 'Hard'),
(1283, 'LeetCode', 283, 'Move Zeroes', 'move-zeroes', 0, 0, 0, 'Easy'),
(1284, 'LeetCode', 284, 'Peeking Iterator', 'peeking-iterator', 0, 0, 0, 'Medium'),
(1285, 'LeetCode', 285, 'Inorder Successor in BST', 'inorder-successor-in-bst', 0, 0, 1, 'Medium'),
(1286, 'LeetCode', 286, 'Walls and Gates', 'walls-and-gates', 1, 0, 1, 'Medium'),
(1287, 'LeetCode', 287, 'Find the Duplicate Number', 'find-the-duplicate-number', 0, 0, 0, 'Medium'),
(1288, 'LeetCode', 288, 'Unique Word Abbreviation', 'unique-word-abbreviation', 0, 0, 1, 'Medium'),
(1289, 'LeetCode', 289, 'Game of Life', 'game-of-life', 0, 0, 0, 'Medium'),
(1290, 'LeetCode', 290, 'Word Pattern', 'word-pattern', 0, 0, 0, 'Easy'),
(1291, 'LeetCode', 291, 'Word Pattern II', 'word-pattern-ii', 0, 0, 0, 'Hard'),
(1292, 'LeetCode', 292, 'Nim Game', 'nim-game', 1, 1, 1, 'Easy'),
(1293, 'LeetCode', 293, 'Flip Game', 'flip-game', 1, 1, 1, 'Easy'),
(1294, 'LeetCode', 294, 'Flip Game II', 'flip-game-ii', 0, 0, 1, 'Medium'),
(1295, 'LeetCode', 295, 'Find Median from Data Stream', 'find-median-from-data-stream', 0, 0, 0, 'Hard'),
(1296, 'LeetCode', 296, 'Best Meeting Point', 'best-meeting-point', 0, 0, 1, 'Hard'),
(1297, 'LeetCode', 297, 'Serialize and Deserialize Binary Tree', 'serialize-and-deserialize-binary-tree', 0, 0, 1, 'Hard'),
(1298, 'LeetCode', 298, 'Binary Tree Longest Consecutive Sequence', 'binary-tree-longest-consecutive-sequence', 0, 0, 1, 'Medium'),
(1299, 'LeetCode', 299, 'Bulls and Cows', 'bulls-and-cows', 1, 0, 1, 'Medium'),
(1300, 'LeetCode', 300, 'Longest Increasing Subsequence', 'longest-increasing-subsequence', 0, 0, 0, 'Medium'),
(1301, 'LeetCode', 301, 'Remove Invalid Parentheses', 'remove-invalid-parentheses', 0, 0, 0, 'Hard'),
(1302, 'LeetCode', 302, 'Smallest Rectangle Enclosing Black Pixels', 'smallest-rectangle-enclosing-black-pixels', 0, 0, 1, 'Hard'),
(1303, 'LeetCode', 303, 'Range Sum Query - Immutable', 'range-sum-query-immutable', 0, 0, 0, 'Easy'),
(1304, 'LeetCode', 304, 'Range Sum Query 2D - Immutable', 'range-sum-query-2d-immutable', 0, 0, 0, 'Medium'),
(1305, 'LeetCode', 305, 'Number of Islands II', 'number-of-islands-ii', 0, 0, 0, 'Hard'),
(1306, 'LeetCode', 306, 'Additive Number', 'additive-number', 1, 0, 0, 'Medium'),
(1307, 'LeetCode', 307, 'Range Sum Query - Mutable', 'range-sum-query-mutable', 0, 0, 0, 'Medium'),
(1308, 'LeetCode', 308, 'Range Sum Query 2D - Mutable', 'range-sum-query-2d-mutable', 0, 0, 0, 'Hard'),
(1309, 'LeetCode', 309, 'Best Time to Buy and Sell Stock with Cooldown', 'best-time-to-buy-and-sell-stock-with-cooldown', 0, 0, 0, 'Medium'),
(1310, 'LeetCode', 310, 'Minimum Height Trees', 'minimum-height-trees', 0, 0, 0, 'Medium'),
(1311, 'LeetCode', 311, 'Sparse Matrix Multiplication', 'sparse-matrix-multiplication', 0, 0, 1, 'Medium'),
(1312, 'LeetCode', 312, 'Burst Balloons', 'burst-balloons', 1, 0, 0, 'Hard'),
(1313, 'LeetCode', 313, 'Super Ugly Number', 'super-ugly-number', 0, 0, 0, 'Medium'),
(1314, 'LeetCode', 314, 'Binary Tree Vertical Order Traversal', 'binary-tree-vertical-order-traversal', 0, 0, 1, 'Medium'),
(1315, 'LeetCode', 315, 'Count of Smaller Numbers After Self', 'count-of-smaller-numbers-after-self', 0, 0, 0, 'Hard'),
(1316, 'LeetCode', 316, 'Remove Duplicate Letters', 'remove-duplicate-letters', 0, 0, 0, 'Hard'),
(1317, 'LeetCode', 317, 'Shortest Distance from All Buildings', 'shortest-distance-from-all-buildings', 0, 0, 0, 'Hard'),
(1318, 'LeetCode', 318, 'Maximum Product of Word Lengths', 'maximum-product-of-word-lengths', 0, 0, 0, 'Medium'),
(1319, 'LeetCode', 319, 'Bulb Switcher', 'bulb-switcher', 1, 0, 0, 'Medium'),
(1320, 'LeetCode', 320, 'Generalized Abbreviation', 'generalized-abbreviation', 1, 1, 1, 'Medium'),
(1321, 'LeetCode', 321, 'Create Maximum Number', 'create-maximum-number', 0, 0, 0, 'Hard'),
(1322, 'LeetCode', 322, 'Coin Change', 'coin-change', 0, 0, 0, 'Medium'),
(1323, 'LeetCode', 323, 'Number of Connected Components in an Undirected Graph', 'number-of-connected-components-in-an-undirected-graph', 0, 1, 0, 'Medium'),
(1324, 'LeetCode', 324, 'Wiggle Sort II', 'wiggle-sort-ii', 0, 0, 0, 'Medium'),
(1325, 'LeetCode', 325, 'Maximum Size Subarray Sum Equals k', 'maximum-size-subarray-sum-equals-k', 0, 0, 1, 'Medium'),
(1326, 'LeetCode', 326, 'Power of Three', 'power-of-three', 0, 0, 0, 'Easy'),
(1327, 'LeetCode', 327, 'Count of Range Sum', 'count-of-range-sum', 0, 0, 0, 'Hard'),
(1328, 'LeetCode', 328, 'Odd Even Linked List', 'odd-even-linked-list', 0, 0, 0, 'Medium'),
(1329, 'LeetCode', 329, 'Longest Increasing Path in a Matrix', 'longest-increasing-path-in-a-matrix', 0, 0, 0, 'Hard'),
(1330, 'LeetCode', 330, 'Patching Array', 'patching-array', 0, 0, 1, 'Hard'),
(1331, 'LeetCode', 331, 'Verify Preorder Serialization of a Binary Tree', 'verify-preorder-serialization-of-a-binary-tree', 0, 0, 0, 'Medium'),
(1332, 'LeetCode', 332, 'Reconstruct Itinerary', 'reconstruct-itinerary', 0, 0, 0, 'Medium'),
(1333, 'LeetCode', 333, 'Largest BST Subtree', 'largest-bst-subtree', 0, 0, 1, 'Medium'),
(1334, 'LeetCode', 334, 'Increasing Triplet Subsequence', 'increasing-triplet-subsequence', 0, 0, 0, 'Medium'),
(1335, 'LeetCode', 335, 'Self Crossing', 'self-crossing', 0, 0, 0, 'Hard'),
(1336, 'LeetCode', 336, 'Palindrome Pairs', 'palindrome-pairs', 0, 0, 0, 'Hard'),
(1337, 'LeetCode', 337, 'House Robber III', 'house-robber-iii', 0, 0, 0, 'Medium'),
(1338, 'LeetCode', 338, 'Counting Bits', 'counting-bits', 0, 0, 0, 'Medium'),
(1339, 'LeetCode', 339, 'Nested List Weight Sum', 'nested-list-weight-sum', 1, 1, 1, 'Easy'),
(1340, 'LeetCode', 340, 'Longest Substring with At Most K Distinct Characters', 'longest-substring-with-at-most-k-distinct-characters', 0, 0, 1, 'Hard'),
(1341, 'LeetCode', 341, 'Flatten Nested List Iterator', 'flatten-nested-list-iterator', 0, 0, 0, 'Medium'),
(1342, 'LeetCode', 342, 'Power of Four', 'power-of-four', 0, 0, 0, 'Easy'),
(1343, 'LeetCode', 343, 'Integer Break', 'integer-break', 0, 0, 0, 'Medium'),
(1344, 'LeetCode', 344, 'Reverse String', 'reverse-string', 1, 1, 1, 'Easy'),
(1345, 'LeetCode', 345, 'Reverse Vowels of a String', 'reverse-vowels-of-a-string', 0, 0, 0, 'Easy'),
(1346, 'LeetCode', 346, 'Moving Average from Data Stream', 'moving-average-from-data-stream', 0, 0, 0, 'Easy'),
(1347, 'LeetCode', 347, 'Top K Frequent Elements', 'top-k-frequent-elements', 0, 0, 0, 'Medium'),
(1348, 'LeetCode', 348, 'Design Tic-Tac-Toe', 'design-tic-tac-toe', 0, 0, 1, 'Medium'),
(1349, 'LeetCode', 349, 'Intersection of Two Arrays', 'intersection-of-two-arrays', 1, 0, 1, 'Easy'),
(1350, 'LeetCode', 350, 'Intersection of Two Arrays II', 'intersection-of-two-arrays-ii', 0, 0, 0, 'Easy'),
(1351, 'LeetCode', 351, 'Android Unlock Patterns', 'android-unlock-patterns', 0, 1, 0, 'Medium'),
(1352, 'LeetCode', 352, 'Data Stream as Disjoint Intervals', 'data-stream-as-disjoint-intervals', 0, 0, 0, 'Hard'),
(1353, 'LeetCode', 353, 'Design Snake Game', 'design-snake-game', 0, 0, 1, 'Medium'),
(1354, 'LeetCode', 354, 'Russian Doll Envelopes', 'russian-doll-envelopes', 0, 0, 0, 'Hard'),
(1355, 'LeetCode', 355, 'Design Twitter', 'design-twitter', 0, 0, 1, 'Medium'),
(1356, 'LeetCode', 356, 'Line Reflection', 'line-reflection', 0, 0, 1, 'Medium'),
(1357, 'LeetCode', 357, 'Count Numbers with Unique Digits', 'count-numbers-with-unique-digits', 0, 0, 0, 'Medium'),
(1358, 'LeetCode', 358, 'Rearrange String k Distance Apart', 'rearrange-string-k-distance-apart', 0, 0, 0, 'Hard'),
(1359, 'LeetCode', 359, 'Logger Rate Limiter', 'logger-rate-limiter', 1, 1, 1, 'Easy'),
(1360, 'LeetCode', 360, 'Sort Transformed Array', 'sort-transformed-array', 0, 0, 1, 'Medium'),
(1361, 'LeetCode', 361, 'Bomb Enemy', 'bomb-enemy', 0, 0, 1, 'Medium'),
(1362, 'LeetCode', 362, 'Design Hit Counter', 'design-hit-counter', 0, 1, 1, 'Medium'),
(1363, 'LeetCode', 363, 'Max Sum of Rectangle No Larger Than K', 'max-sum-of-rectangle-no-larger-than-k', 0, 0, 0, 'Hard'),
(1364, 'LeetCode', 364, 'Nested List Weight Sum II', 'nested-list-weight-sum-ii', 1, 1, 1, 'Medium'),
(1365, 'LeetCode', 365, 'Water and Jug Problem', 'water-and-jug-problem', 0, 0, 0, 'Medium'),
(1366, 'LeetCode', 366, 'Find Leaves of Binary Tree', 'find-leaves-of-binary-tree', 1, 1, 1, 'Medium'),
(1367, 'LeetCode', 367, 'Valid Perfect Square', 'valid-perfect-square', 0, 0, 0, 'Easy'),
(1368, 'LeetCode', 368, 'Largest Divisible Subset', 'largest-divisible-subset', 0, 0, 0, 'Medium'),
(1369, 'LeetCode', 369, 'Plus One Linked List', 'plus-one-linked-list', 1, 1, 1, 'Medium'),
(1370, 'LeetCode', 370, 'Range Addition', 'range-addition', 1, 1, 1, 'Medium'),
(1371, 'LeetCode', 371, 'Sum of Two Integers', 'sum-of-two-integers', 0, 0, 0, 'Easy'),
(1372, 'LeetCode', 372, 'Super Pow', 'super-pow', 0, 0, 0, 'Medium'),
(1373, 'LeetCode', 373, 'Find K Pairs with Smallest Sums', 'find-k-pairs-with-smallest-sums', 0, 0, 0, 'Medium'),
(1374, 'LeetCode', 374, 'Guess Number Higher or Lower', 'guess-number-higher-or-lower', 0, 0, 1, 'Easy'),
(1375, 'LeetCode', 375, 'Guess Number Higher or Lower II', 'guess-number-higher-or-lower-ii', 1, 1, 1, 'Medium'),
(1376, 'LeetCode', 376, 'Wiggle Subsequence', 'wiggle-subsequence', 0, 0, 1, 'Medium'),
(1377, 'LeetCode', 377, 'Combination Sum IV', 'combination-sum-iv', 0, 0, 1, 'Medium'),
(1378, 'LeetCode', 378, 'Kth Smallest Element in a Sorted Matrix', 'kth-smallest-element-in-a-sorted-matrix', 0, 0, 0, 'Medium'),
(1379, 'LeetCode', 379, 'Design Phone Directory', 'design-phone-directory', 0, 0, 2, 'Medium'),
(1380, 'LeetCode', 380, 'Insert Delete GetRandom O(1)', 'insert-delete-getrandom-o1', 0, 0, 1, 'Medium'),
(1381, 'LeetCode', 381, 'Insert Delete GetRandom O(1) - Duplicates allowed', 'insert-delete-getrandom-o1-duplicates-allowed', 0, 0, 0, 'Hard'),
(1382, 'LeetCode', 382, 'Linked List Random Node', 'linked-list-random-node', 0, 0, 0, 'Medium'),
(1383, 'LeetCode', 383, 'Ransom Note', 'ransom-note', 1, 1, 1, 'Easy'),
(1384, 'LeetCode', 384, 'Shuffle an Array', 'shuffle-an-array', 0, 0, 0, 'Medium'),
(1385, 'LeetCode', 385, 'Mini Parser', 'mini-parser', 0, 0, 1, 'Medium'),
(1386, 'LeetCode', 386, 'Lexicographical Numbers', 'lexicographical-numbers', 0, 0, 1, 'Medium'),
(1387, 'LeetCode', 387, 'First Unique Character in a String', 'first-unique-character-in-a-string', 0, 0, 1, 'Easy'),
(1388, 'LeetCode', 388, 'Longest Absolute File Path', 'longest-absolute-file-path', 0, 0, 1, 'Medium'),
(1389, 'LeetCode', 389, 'Find the Difference', 'find-the-difference', 1, 1, 2, 'Easy'),
(1390, 'LeetCode', 390, 'Elimination Game', 'elimination-game', 0, 0, 1, 'Medium'),
(1391, 'LeetCode', 391, 'Perfect Rectangle', 'perfect-rectangle', 0, 0, 1, 'Hard'),
(1392, 'LeetCode', 392, 'Is Subsequence', 'is-subsequence', 0, 0, 0, 'Medium'),
(1393, 'LeetCode', 393, 'UTF-8 Validation', 'utf-8-validation', 0, 0, 1, 'Medium'),
(1394, 'LeetCode', 394, 'Decode String', 'decode-string', 0, 0, 1, 'Medium'),
(1395, 'LeetCode', 395, 'Longest Substring with At Least K Repeating Characters', 'longest-substring-with-at-least-k-repeating-characters', 0, 0, 1, 'Medium'),
(1396, 'LeetCode', 396, 'Rotate Function', 'rotate-function', 1, 0, 0, 'Medium'),
(1397, 'LeetCode', 397, 'Integer Replacement', 'integer-replacement', 0, 0, 1, 'Medium'),
(1398, 'LeetCode', 398, 'Random Pick Index', 'random-pick-index', 0, 0, 1, 'Medium'),
(1399, 'LeetCode', 399, 'Evaluate Division', 'evaluate-division', 0, 0, 1, 'Medium'),
(1400, 'LeetCode', 400, 'Nth Digit', 'nth-digit', 0, 0, 1, 'Easy'),
(1401, 'LeetCode', 401, 'Binary Watch', 'binary-watch', 1, 0, 1, 'Easy'),
(1402, 'LeetCode', 402, 'Remove K Digits', 'remove-k-digits', 0, 0, 1, 'Medium'),
(1403, 'LeetCode', 403, 'Frog Jump', 'frog-jump', 0, 0, 0, 'Hard'),
(1404, 'LeetCode', 404, 'Sum of Left Leaves', 'sum-of-left-leaves', 1, 1, 1, 'Easy'),
(1405, 'LeetCode', 405, 'Convert a Number to Hexadecimal', 'convert-a-number-to-hexadecimal', 0, 0, 1, 'Easy'),
(1406, 'LeetCode', 406, 'Queue Reconstruction by Height', 'queue-reconstruction-by-height', 0, 0, 1, 'Medium'),
(1407, 'LeetCode', 407, 'Trapping Rain Water II', 'trapping-rain-water-ii', 0, 0, 0, 'Hard'),
(1408, 'LeetCode', 408, 'Valid Word Abbreviation', 'valid-word-abbreviation', 0, 0, 1, 'Easy'),
(1409, 'LeetCode', 409, 'Longest Palindrome', 'longest-palindrome', 0, 0, 1, 'Easy'),
(1410, 'LeetCode', 410, 'Split Array Largest Sum', 'split-array-largest-sum', 0, 0, 0, 'Hard'),
(1411, 'LeetCode', 411, 'Minimum Unique Word Abbreviation', 'minimum-unique-word-abbreviation', 0, 0, 0, 'Hard'),
(1412, 'LeetCode', 412, 'Fizz Buzz', 'fizz-buzz', 1, 1, 1, 'Easy'),
(1413, 'LeetCode', 413, 'Arithmetic Slices', 'arithmetic-slices', 2, 1, 1, 'Medium'),
(1414, 'LeetCode', 414, 'Third Maximum Number', 'third-maximum-number', 0, 0, 1, 'Easy'),
(1415, 'LeetCode', 415, 'Add Strings', 'add-strings', 2, 0, 1, 'Easy'),
(1416, 'LeetCode', 416, 'Partition Equal Subset Sum', 'partition-equal-subset-sum', 0, 0, 1, 'Medium'),
(1417, 'LeetCode', 417, 'Pacific Atlantic Water Flow', 'pacific-atlantic-water-flow', 0, 0, 0, 'Medium'),
(1418, 'LeetCode', 418, 'Sentence Screen Fitting', 'sentence-screen-fitting', 0, 0, 0, 'Medium'),
(1419, 'LeetCode', 419, 'Battleships in a Board', 'battleships-in-a-board', 1, 1, 1, 'Medium'),
(1420, 'LeetCode', 420, 'Strong Password Checker', 'strong-password-checker', 0, 0, 0, 'Hard'),
(1421, 'LeetCode', 421, 'Maximum XOR of Two Numbers in an Array', 'maximum-xor-of-two-numbers-in-an-array', 0, 0, 1, 'Medium'),
(1422, 'LeetCode', 422, 'Valid Word Square', 'valid-word-square', 1, 1, 1, 'Easy'),
(1423, 'LeetCode', 423, 'Reconstruct Original Digits from English', 'reconstruct-original-digits-from-english', 0, 0, 1, 'Medium'),
(1424, 'LeetCode', 424, 'Longest Repeating Character Replacement', 'longest-repeating-character-replacement', 1, 1, 1, 'Medium'),
(1425, 'LeetCode', 425, 'Word Squares', 'word-squares', 0, 0, 0, 'Hard'),
(1432, 'LeetCode', 432, 'All O`one Data Structure', 'all-o`one-data-structure', 0, 0, 0, 'Hard'),
(1434, 'LeetCode', 434, 'Number of Segments in a String', 'number-of-segments-in-a-string', 1, 1, 1, 'Easy'),
(1435, 'LeetCode', 435, 'Non-overlapping Intervals', 'non-overlapping-intervals', 0, 0, 1, 'Medium'),
(1436, 'LeetCode', 436, 'Find Right Interval', 'find-right-interval', 0, 0, 1, 'Medium'),
(1437, 'LeetCode', 437, 'Path Sum III', 'path-sum-iii', 0, 0, 0, 'Easy'),
(1438, 'LeetCode', 438, 'Find All Anagrams in a String', 'find-all-anagrams-in-a-string', 0, 0, 1, 'Easy'),
(1439, 'LeetCode', 439, 'Ternary Expression Parser', 'ternary-expression-parser', 1, 1, 1, 'Medium'),
(1440, 'LeetCode', 440, 'K-th Smallest in Lexicographical Order', 'k-th-smallest-in-lexicographical-order', 0, 0, 0, 'Hard'),
(1441, 'LeetCode', 441, 'Arranging Coins', 'arranging-coins', 1, 0, 0, 'Easy'),
(1442, 'LeetCode', 442, 'Find All Duplicates in an Array', 'find-all-duplicates-in-an-array', 1, 1, 1, 'Medium'),
(1444, 'LeetCode', 444, 'Sequence Reconstruction', 'sequence-reconstruction', 0, 0, 0, 'Medium'),
(1445, 'LeetCode', 445, 'Add Two Numbers II', 'add-two-numbers-ii', 0, 0, 1, 'Medium'),
(1446, 'LeetCode', 446, 'Arithmetic Slices II - Subsequence', 'arithmetic-slices-ii-subsequence', 0, 0, 0, 'Hard'),
(1447, 'LeetCode', 447, 'Number of Boomerangs', 'number-of-boomerangs', 0, 0, 1, 'Easy'),
(1448, 'LeetCode', 448, 'Find All Numbers Disappeared in an Array', 'find-all-numbers-disappeared-in-an-array', 0, 0, 1, 'Easy'),
(1449, 'LeetCode', 449, 'Serialize and Deserialize BST', 'serialize-and-deserialize-bst', 0, 0, 1, 'Medium'),
(1450, 'LeetCode', 450, 'Delete Node in a BST', 'delete-node-in-a-bst', 0, 0, 1, 'Medium'),
(1451, 'LeetCode', 451, 'Sort Characters By Frequency', 'sort-characters-by-frequency', 1, 0, 1, 'Medium'),
(1452, 'LeetCode', 452, 'Minimum Number of Arrows to Burst Balloons', 'minimum-number-of-arrows-to-burst-balloons', 0, 0, 1, 'Medium'),
(1453, 'LeetCode', 453, 'Minimum Moves to Equal Array Elements', 'minimum-moves-to-equal-array-elements', 1, 1, 1, 'Easy'),
(1454, 'LeetCode', 454, '4Sum II', '4sum-ii', 1, 1, 1, 'Medium'),
(1455, 'LeetCode', 455, 'Assign Cookies', 'assign-cookies', 1, 1, 1, 'Easy'),
(1456, 'LeetCode', 456, '132 Pattern', '132-pattern', 0, 0, 1, 'Medium'),
(1459, 'LeetCode', 459, 'Repeated Substring Pattern', 'repeated-substring-pattern', 0, 1, 1, 'Easy'),
(1460, 'LeetCode', 460, 'LFU Cache', 'lfu-cache', 0, 0, 0, 'Hard'),
(1461, 'LeetCode', 461, 'Hamming Distance', 'hamming-distance', 1, 1, 1, 'Easy'),
(1462, 'LeetCode', 462, 'Minimum Moves to Equal Array Elements II', 'minimum-moves-to-equal-array-elements-ii', 0, 0, 1, 'Medium'),
(1463, 'LeetCode', 463, 'Island Perimeter', 'island-perimeter', 1, 1, 1, 'Easy'),
(1464, 'LeetCode', 464, 'Can I Win', 'can-i-win', 0, 0, 1, 'Medium'),
(1465, 'LeetCode', 465, 'Optimal Account Balancing', 'optimal-account-balancing', 0, 0, 0, 'Hard'),
(1466, 'LeetCode', 466, 'Count The Repetitions', 'count-the-repetitions', 0, 0, 0, 'Hard'),
(1467, 'LeetCode', 467, 'Unique Substrings in Wraparound String', 'unique-substrings-in-wraparound-string', 0, 0, 0, 'Medium'),
(1468, 'LeetCode', 468, 'Validate IP Address', 'validate-ip-address', 0, 0, 1, 'Medium'),
(1469, 'LeetCode', 469, 'Convex Polygon', 'convex-polygon', 0, 0, 1, 'Medium'),
(1471, 'LeetCode', 471, 'Encode String with Shortest Length', 'encode-string-with-shortest-length', 0, 0, 0, 'Hard'),
(1472, 'LeetCode', 472, 'Concatenated Words', 'concatenated-words', 0, 0, 0, 'Hard'),
(1473, 'LeetCode', 473, 'Matchsticks to Square', 'matchsticks-to-square', 0, 0, 1, 'Medium'),
(1474, 'LeetCode', 474, 'Ones and Zeroes', 'ones-and-zeroes', 0, 0, 1, 'Medium'),
(1475, 'LeetCode', 475, 'Heaters', 'heaters', 0, 0, 1, 'Easy'),
(1476, 'LeetCode', 476, 'Number Complement', 'number-complement', 1, 1, 1, 'Easy'),
(1477, 'LeetCode', 477, 'Total Hamming Distance', 'total-hamming-distance', 0, 0, 1, 'Medium'),
(1480, 'LeetCode', 480, 'Sliding Window Median', 'sliding-window-median', 0, 0, 0, 'Hard'),
(1481, 'LeetCode', 481, 'Magical String', 'magical-string', 1, 1, 1, 'Medium'),
(1482, 'LeetCode', 482, 'License Key Formatting', 'license-key-formatting', 0, 0, 1, 'Medium'),
(1483, 'LeetCode', 483, 'Smallest Good Base', 'smallest-good-base', 0, 0, 0, 'Hard'),
(1484, 'LeetCode', 484, 'Find Permutation', 'find-permutation', 1, 1, 1, 'Medium'),
(1485, 'LeetCode', 485, 'Max Consecutive Ones', 'max-consecutive-ones', 1, 0, 1, 'Easy'),
(1486, 'LeetCode', 486, 'Predict the Winner', 'predict-the-winner', 0, 0, 1, 'Medium'),
(1487, 'LeetCode', 487, 'Max Consecutive Ones II', 'max-consecutive-ones-ii', 1, 1, 1, 'Medium'),
(1488, 'LeetCode', 488, 'Zuma Game', 'zuma-game', 0, 0, 0, 'Hard'),
(1490, 'LeetCode', 490, 'The Maze', 'the-maze', 0, 0, 1, 'Medium'),
(1491, 'LeetCode', 491, 'Increasing Subsequences', 'increasing-subsequences', 0, 0, 1, 'Medium'),
(1492, 'LeetCode', 492, 'Construct the Rectangle', 'construct-the-rectangle', 1, 1, 1, 'Easy'),
(1493, 'LeetCode', 493, 'Reverse Pairs', 'reverse-pairs', 0, 0, 0, 'Hard'),
(1494, 'LeetCode', 494, 'Target Sum', 'target-sum', 1, 1, 0, 'Medium'),
(1495, 'LeetCode', 495, 'Teemo Attacking', 'teemo-attacking', 1, 1, 1, 'Medium'),
(1496, 'LeetCode', 496, 'Next Greater Element I', 'next-greater-element-i', 0, 0, 1, 'Easy'),
(1498, 'LeetCode', 498, 'Diagonal Traverse', 'diagonal-traverse', 0, 0, 1, 'Medium'),
(1499, 'LeetCode', 499, 'The Maze III', 'the-maze-iii', 0, 0, 0, 'Hard'),
(1500, 'LeetCode', 500, 'Keyboard Row', 'keyboard-row', 0, 0, 1, 'Easy'),
(1501, 'LeetCode', 501, 'Find Mode in Binary Search Tree', 'find-mode-in-binary-search-tree', 1, 1, 1, 'Easy'),
(1502, 'LeetCode', 502, 'IPO', 'ipo', 0, 0, 1, 'Hard'),
(1503, 'LeetCode', 503, 'Next Greater Element II', 'next-greater-element-ii', 0, 0, 1, 'Medium'),
(1504, 'LeetCode', 504, 'Base 7', 'base-7', 0, 0, 1, 'Easy'),
(1505, 'LeetCode', 505, 'The Maze II', 'the-maze-ii', 0, 0, 2, 'Medium'),
(1506, 'LeetCode', 506, 'Relative Ranks', 'relative-ranks', 0, 0, 0, 'Easy'),
(1507, 'LeetCode', 507, 'Perfect Number', 'perfect-number', 0, 0, 1, 'Easy'),
(1508, 'LeetCode', 508, 'Most Frequent Subtree Sum', 'most-frequent-subtree-sum', 0, 0, 1, 'Medium'),
(1513, 'LeetCode', 513, 'Find Bottom Left Tree Value', 'find-bottom-left-tree-value', 0, 0, 1, 'Medium'),
(1514, 'LeetCode', 514, 'Freedom Trail', 'freedom-trail', 0, 0, 0, 'Hard'),
(1515, 'LeetCode', 515, 'Find Largest Value in Each Tree Row', 'find-largest-value-in-each-tree-row', 0, 0, 1, 'Medium'),
(1516, 'LeetCode', 516, 'Longest Palindromic Subsequence', 'longest-palindromic-subsequence', 1, 0, 1, 'Medium'),
(1517, 'LeetCode', 517, 'Super Washing Machines', 'super-washing-machines', 0, 0, 0, 'Hard'),
(1520, 'LeetCode', 520, 'Detect Capital', 'detect-capital', 0, 0, 1, 'Easy'),
(1521, 'LeetCode', 521, 'Longest Uncommon Subsequence I', 'longest-uncommon-subsequence-i', 0, 0, 1, 'Easy'),
(1522, 'LeetCode', 522, 'Longest Uncommon Subsequence II', 'longest-uncommon-subsequence-ii', 0, 0, 1, 'Medium'),
(1523, 'LeetCode', 523, 'Continuous Subarray Sum', 'continuous-subarray-sum', 1, 0, 1, 'Medium'),
(1524, 'LeetCode', 524, 'Longest Word in Dictionary through Deleting', 'longest-word-in-dictionary-through-deleting', 0, 0, 2, 'Medium'),
(1525, 'LeetCode', 525, 'Contiguous Array', 'contiguous-array', 0, 0, 1, 'Medium'),
(1526, 'LeetCode', 526, 'Beautiful Arrangement', 'beautiful-arrangement', 1, 0, 1, 'Medium'),
(1527, 'LeetCode', 527, 'Word Abbreviation', 'word-abbreviation', 0, 0, 0, 'Hard'),
(1529, 'LeetCode', 529, 'Minesweeper', 'minesweeper', 0, 0, 1, 'Medium'),
(1530, 'LeetCode', 530, 'Minimum Absolute Difference in BST', 'minimum-absolute-difference-in-bst', 0, 1, 1, 'Easy'),
(1531, 'LeetCode', 531, 'Lonely Pixel I', 'lonely-pixel-i', 0, 0, 1, 'Medium'),
(1532, 'LeetCode', 532, 'K-diff Pairs in an Array', 'k-diff-pairs-in-an-array', 0, 0, 1, 'Easy'),
(1533, 'LeetCode', 533, 'Lonely Pixel II', 'lonely-pixel-ii', 0, 0, 1, 'Medium'),
(1535, 'LeetCode', 535, 'Encode and Decode TinyURL', 'encode-and-decode-tinyurl', 0, 0, 1, 'Medium'),
(1536, 'LeetCode', 536, 'Construct Binary Tree from String', 'construct-binary-tree-from-string', 0, 0, 1, 'Medium'),
(1537, 'LeetCode', 537, 'Complex Number Multiplication', 'complex-number-multiplication', 0, 0, 1, 'Medium'),
(1538, 'LeetCode', 538, 'Convert BST to Greater Tree', 'convert-bst-to-greater-tree', 1, 0, 1, 'Medium'),
(1539, 'LeetCode', 539, 'Minimum Time Difference', 'minimum-time-difference', 0, 0, 1, 'Medium'),
(1541, 'LeetCode', 541, 'Reverse String II', 'reverse-string-ii', 0, 0, 1, 'Easy'),
(1542, 'LeetCode', 542, '01 Matrix', '01-matrix', 0, 0, 1, 'Medium'),
(1543, 'LeetCode', 543, 'Diameter of Binary Tree', 'diameter-of-binary-tree', 0, 0, 1, 'Easy'),
(1544, 'LeetCode', 544, 'Output Contest Matches', 'output-contest-matches', 0, 0, 1, 'Medium'),
(1545, 'LeetCode', 545, 'Boundary of Binary Tree', 'boundary-of-binary-tree', 0, 0, 1, 'Medium'),
(1546, 'LeetCode', 546, 'Remove Boxes', 'remove-boxes', 0, 0, 0, 'Hard'),
(1547, 'LeetCode', 547, 'Friend Circles', 'friend-circles', 0, 1, 0, 'Medium'),
(1548, 'LeetCode', 548, 'Split Array with Equal Sum', 'split-array-with-equal-sum', 0, 0, 2, 'Medium'),
(1549, 'LeetCode', 549, 'Binary Tree Longest Consecutive Sequence II', 'binary-tree-longest-consecutive-sequence-ii', 0, 0, 1, 'Medium'),
(1551, 'LeetCode', 551, 'Student Attendance Record I', 'student-attendance-record-i', 0, 0, 1, 'Easy'),
(1552, 'LeetCode', 552, 'Student Attendance Record II', 'student-attendance-record-ii', 0, 0, 1, 'Hard'),
(1553, 'LeetCode', 553, 'Optimal Division', 'optimal-division', 0, 0, 1, 'Medium'),
(1554, 'LeetCode', 554, 'Brick Wall', 'brick-wall', 0, 0, 1, 'Medium'),
(1555, 'LeetCode', 555, 'Split Concatenated Strings', 'split-concatenated-strings', 0, 0, 1, 'Medium'),
(1556, 'LeetCode', 556, 'Next Greater Element III', 'next-greater-element-iii', 0, 0, 1, 'Medium'),
(1557, 'LeetCode', 557, 'Reverse Words in a String III', 'reverse-words-in-a-string-iii', 0, 0, 1, 'Easy'),
(1560, 'LeetCode', 560, 'Subarray Sum Equals K', 'subarray-sum-equals-k', 0, 0, 1, 'Medium'),
(1561, 'LeetCode', 561, 'Array Partition I', 'array-partition-i', 0, 0, 1, 'Easy'),
(1562, 'LeetCode', 562, 'Longest Line of Consecutive One in Matrix', 'longest-line-of-consecutive-one-in-matrix', 0, 0, 1, 'Medium'),
(1563, 'LeetCode', 563, 'Binary Tree Tilt', 'binary-tree-tilt', 0, 0, 1, 'Easy'),
(1564, 'LeetCode', 564, 'Find the Closest Palindrome', 'find-the-closest-palindrome', 0, 0, 0, 'Hard'),
(1566, 'LeetCode', 566, 'Reshape the Matrix', 'reshape-the-matrix', 0, 0, 1, 'Easy'),
(1567, 'LeetCode', 567, 'Permutation in String', 'permutation-in-string', 0, 0, 1, 'Medium'),
(1568, 'LeetCode', 568, 'Maximum Vacation Days', 'maximum-vacation-days', 0, 0, 0, 'Hard'),
(2001, 'LintCode', 1, 'A+B问题', 'a-b-problem', 1, 2, 0, 'Easy'),
(2002, 'LintCode', 2, '尾部的零', 'trailing-zeros', 2, 1, 0, 'Easy'),
(2003, 'LintCode', 3, '统计数字', 'digit-counts', 1, 1, 0, 'Medium'),
(2004, 'LintCode', 4, '丑数 II', 'ugly-number-ii', 1, 1, 0, 'Medium'),
(2005, 'LintCode', 5, '第k大元素', 'kth-largest-element', 1, 1, 0, 'Medium'),
(2006, 'LintCode', 6, '合并排序数组', 'merge-two-sorted-arrays', 1, 1, 0, 'Easy'),
(2007, 'LintCode', 7, '二叉树的序列化和反序列化', 'binary-tree-serialization', 1, 2, 0, 'Medium'),
(2008, 'LintCode', 8, '旋转字符串', 'rotate-string', 1, 2, 0, 'Easy'),
(2009, 'LintCode', 9, 'Fizz Buzz问题', 'fizz-buzz', 1, 1, 0, 'Easy'),
(2011, 'LintCode', 11, '二叉查找树中搜索区间', 'search-range-in-binary-search-tree', 1, 1, 0, 'Medium'),
(2012, 'LintCode', 12, '带最小值操作的栈', 'min-stack', 1, 0, 0, 'Medium'),
(2013, 'LintCode', 13, '字符串查找', 'strstr', 1, 2, 0, 'Easy'),
(2014, 'LintCode', 14, '二分查找', 'first-position-of-target', 1, 2, 0, 'Easy'),
(2015, 'LintCode', 15, '全排列', 'permutations', 2, 2, 0, 'Medium'),
(2016, 'LintCode', 16, '带重复元素的排列', 'permutations-ii', 2, 2, 0, 'Medium'),
(2017, 'LintCode', 17, '子集', 'subsets', 1, 2, 0, 'Medium'),
(2018, 'LintCode', 18, '带重复元素的子集', 'subsets-ii', 1, 2, 0, 'Medium'),
(2020, 'LintCode', 20, '骰子求和', 'dices-sum', 1, 1, 0, 'Hard'),
(2022, 'LintCode', 22, '平面列表', 'flatten-list', 2, 2, 0, 'Easy'),
(2024, 'LintCode', 24, 'LFU缓存', 'lfu-cache', 1, 0, 0, 'Hard'),
(2028, 'LintCode', 28, '搜索二维矩阵', 'search-a-2d-matrix', 1, 3, 0, 'Easy'),
(2029, 'LintCode', 29, '交叉字符串', 'interleaving-string', 1, 1, 0, 'Medium'),
(2030, 'LintCode', 30, '插入区间', 'insert-interval', 1, 2, 0, 'Easy'),
(2031, 'LintCode', 31, '数组划分', 'partition-array', 2, 2, 0, 'Medium'),
(2032, 'LintCode', 32, '最小子串覆盖', 'minimum-window-substring', 1, 1, 0, 'Medium'),
(2033, 'LintCode', 33, 'N皇后问题', 'n-queens', 1, 1, 0, 'Medium');
INSERT INTO `problems` (`id`, `platform`, `number`, `title`, `slink`, `cpp`, `java`, `python`, `difficulty`) VALUES
(2034, 'LintCode', 34, 'N皇后问题 II', 'n-queens-ii', 1, 0, 0, 'Medium'),
(2035, 'LintCode', 35, '翻转链表', 'reverse-linked-list', 1, 2, 0, 'Easy'),
(2036, 'LintCode', 36, '翻转链表 II', 'reverse-linked-list-ii', 2, 2, 0, 'Medium'),
(2038, 'LintCode', 38, '搜索二维矩阵 II', 'search-a-2d-matrix-ii', 1, 1, 0, 'Medium'),
(2039, 'LintCode', 39, '恢复旋转排序数组', 'recover-rotated-sorted-array', 1, 3, 0, 'Easy'),
(2040, 'LintCode', 40, '用栈实现队列', 'implement-queue-by-two-stacks', 1, 0, 0, 'Medium'),
(2041, 'LintCode', 41, '最大子数组', 'maximum-subarray', 2, 4, 0, 'Easy'),
(2042, 'LintCode', 42, '最大子数组 II', 'maximum-subarray-ii', 1, 1, 0, 'Medium'),
(2043, 'LintCode', 43, '最大子数组 III', 'maximum-subarray-iii', 1, 1, 0, 'Hard'),
(2044, 'LintCode', 44, '最小子数组', 'minimum-subarray', 1, 2, 0, 'Easy'),
(2045, 'LintCode', 45, '最大子数组差', 'maximum-subarray-difference', 1, 1, 0, 'Medium'),
(2046, 'LintCode', 46, '主元素', 'majority-number', 1, 2, 0, 'Easy'),
(2047, 'LintCode', 47, '主元素 II', 'majority-number-ii', 1, 1, 0, 'Medium'),
(2048, 'LintCode', 48, '主元素 III', 'majority-number-iii', 1, 0, 0, 'Medium'),
(2049, 'LintCode', 49, '字符大小写排序', 'sort-letters-by-case', 1, 0, 0, 'Medium'),
(2050, 'LintCode', 50, '数组剔除元素后的乘积', 'product-of-array-exclude-itself', 1, 2, 0, 'Easy'),
(2051, 'LintCode', 51, '上一个排列', 'previous-permutation', 1, 1, 0, 'Medium'),
(2052, 'LintCode', 52, '下一个排列', 'next-permutation', 1, 0, 0, 'Medium'),
(2053, 'LintCode', 53, '翻转字符串', 'reverse-words-in-a-string', 1, 1, 0, 'Easy'),
(2054, 'LintCode', 54, '转换字符串到整数', 'string-to-integer-ii', 1, 1, 0, 'Hard'),
(2055, 'LintCode', 55, '比较字符串', 'compare-strings', 1, 1, 0, 'Easy'),
(2056, 'LintCode', 56, '两数之和', 'two-sum', 3, 2, 0, 'Easy'),
(2057, 'LintCode', 57, '三数之和', '3sum', 1, 3, 0, 'Medium'),
(2058, 'LintCode', 58, '四数之和', '4sum', 1, 1, 0, 'Medium'),
(2059, 'LintCode', 59, '最接近的三数之和', '3sum-closest', 1, 2, 0, 'Medium'),
(2060, 'LintCode', 60, '搜索插入位置', 'search-insert-position', 1, 2, 0, 'Easy'),
(2061, 'LintCode', 61, '搜索区间', 'search-for-a-range', 1, 2, 0, 'Medium'),
(2062, 'LintCode', 62, '搜索旋转排序数组', 'search-in-rotated-sorted-array', 1, 2, 0, 'Medium'),
(2063, 'LintCode', 63, '搜索旋转排序数组 II', 'search-in-rotated-sorted-array-ii', 1, 2, 0, 'Medium'),
(2064, 'LintCode', 64, '合并排序数组 II', 'merge-sorted-array', 1, 2, 0, 'Easy'),
(2065, 'LintCode', 65, '两个排序数组的中位数', 'median-of-two-sorted-arrays', 1, 2, 0, 'Hard'),
(2066, 'LintCode', 66, '二叉树的前序遍历', 'binary-tree-preorder-traversal', 1, 4, 0, 'Easy'),
(2067, 'LintCode', 67, '二叉树的中序遍历', 'binary-tree-inorder-traversal', 1, 4, 0, 'Easy'),
(2068, 'LintCode', 68, '二叉树的后序遍历', 'binary-tree-postorder-traversal', 1, 4, 0, 'Easy'),
(2069, 'LintCode', 69, '二叉树的层次遍历', 'binary-tree-level-order-traversal', 1, 3, 0, 'Easy'),
(2070, 'LintCode', 70, '二叉树的层次遍历 II', 'binary-tree-level-order-traversal-ii', 1, 1, 0, 'Medium'),
(2071, 'LintCode', 71, '二叉树的锯齿形层次遍历', 'binary-tree-zigzag-level-order-traversal', 1, 1, 0, 'Medium'),
(2072, 'LintCode', 72, '中序遍历和后序遍历树构造二叉树', 'construct-binary-tree-from-inorder-and-postorder-traversal', 1, 1, 0, 'Medium'),
(2073, 'LintCode', 73, '前序遍历和中序遍历树构造二叉树', 'construct-binary-tree-from-preorder-and-inorder-traversal', 1, 1, 0, 'Medium'),
(2074, 'LintCode', 74, '第一个错误的代码版本', 'first-bad-version', 1, 2, 0, 'Medium'),
(2075, 'LintCode', 75, '寻找峰值', 'find-peak-element', 1, 2, 0, 'Medium'),
(2076, 'LintCode', 76, '最长上升子序列', 'longest-increasing-subsequence', 1, 2, 0, 'Medium'),
(2077, 'LintCode', 77, '最长公共子序列', 'longest-common-subsequence', 1, 1, 0, 'Medium'),
(2078, 'LintCode', 78, '最长公共前缀', 'longest-common-prefix', 1, 1, 0, 'Medium'),
(2079, 'LintCode', 79, '最长公共子串', 'longest-common-substring', 1, 1, 0, 'Medium'),
(2080, 'LintCode', 80, '中位数', 'median', 1, 2, 0, 'Easy'),
(2081, 'LintCode', 81, '数据流中位数', 'data-stream-median', 1, 1, 0, 'Hard'),
(2082, 'LintCode', 82, '落单的数', 'single-number', 1, 2, 0, 'Easy'),
(2083, 'LintCode', 83, '落单的数 II', 'single-number-ii', 1, 1, 0, 'Medium'),
(2084, 'LintCode', 84, '落单的数 III', 'single-number-iii', 1, 1, 0, 'Medium'),
(2085, 'LintCode', 85, '在二叉查找树中插入节点', 'insert-node-in-a-binary-search-tree', 1, 2, 0, 'Easy'),
(2086, 'LintCode', 86, '二叉查找树迭代器', 'binary-search-tree-iterator', 1, 1, 0, 'Hard'),
(2087, 'LintCode', 87, '删除二叉查找树的节点', 'remove-node-in-binary-search-tree', 1, 1, 0, 'Hard'),
(2088, 'LintCode', 88, '最近公共祖先', 'lowest-common-ancestor', 1, 1, 0, 'Medium'),
(2089, 'LintCode', 89, 'k数和', 'k-sum', 1, 1, 0, 'Hard'),
(2090, 'LintCode', 90, 'k数和 II', 'k-sum-ii', 1, 1, 0, 'Medium'),
(2091, 'LintCode', 91, '最小调整代价', 'minimum-adjustment-cost', 2, 1, 0, 'Medium'),
(2092, 'LintCode', 92, '背包问题', 'backpack', 1, 1, 0, 'Medium'),
(2093, 'LintCode', 93, '平衡二叉树', 'balanced-binary-tree', 1, 2, 0, 'Easy'),
(2094, 'LintCode', 94, '二叉树中的最大路径和', 'binary-tree-maximum-path-sum', 1, 0, 0, 'Medium'),
(2095, 'LintCode', 95, '验证二叉查找树', 'validate-binary-search-tree', 1, 1, 0, 'Medium'),
(2096, 'LintCode', 96, '链表划分', 'partition-list', 1, 1, 0, 'Easy'),
(2097, 'LintCode', 97, '二叉树的最大深度', 'maximum-depth-of-binary-tree', 1, 2, 0, 'Easy'),
(2098, 'LintCode', 98, '链表排序', 'sort-list', 1, 1, 0, 'Medium'),
(2099, 'LintCode', 99, '重排链表', 'reorder-list', 1, 0, 0, 'Medium'),
(2100, 'LintCode', 100, '删除排序数组中的重复数字', 'remove-duplicates-from-sorted-array', 1, 1, 0, 'Easy'),
(2101, 'LintCode', 101, '删除排序数组中的重复数字 II', 'remove-duplicates-from-sorted-array-ii', 1, 1, 0, 'Easy'),
(2102, 'LintCode', 102, '带环链表', 'linked-list-cycle', 1, 1, 0, 'Medium'),
(2103, 'LintCode', 103, '带环链表 II', 'linked-list-cycle-ii', 1, 0, 0, 'Hard'),
(2104, 'LintCode', 104, '合并k个排序链表', 'merge-k-sorted-lists', 1, 1, 0, 'Medium'),
(2105, 'LintCode', 105, '复制带随机指针的链表', 'copy-list-with-random-pointer', 1, 1, 1, 'Medium'),
(2106, 'LintCode', 106, '排序列表转换为二分查找树', 'convert-sorted-list-to-balanced-bst', 1, 0, 0, 'Medium'),
(2107, 'LintCode', 107, '单词切分', 'word-break', 1, 1, 0, 'Medium'),
(2108, 'LintCode', 108, '分割回文串 II', 'palindrome-partitioning-ii', 1, 0, 0, 'Medium'),
(2109, 'LintCode', 109, '数字三角形', 'triangle', 1, 2, 0, 'Easy'),
(2110, 'LintCode', 110, '最小路径和', 'minimum-path-sum', 1, 2, 0, 'Easy'),
(2111, 'LintCode', 111, '爬楼梯', 'climbing-stairs', 1, 2, 0, 'Easy'),
(2112, 'LintCode', 112, '删除排序链表中的重复元素', 'remove-duplicates-from-sorted-list', 1, 1, 0, 'Easy'),
(2113, 'LintCode', 113, '删除排序链表中的重复数字 II', 'remove-duplicates-from-sorted-list-ii', 1, 0, 0, 'Medium'),
(2114, 'LintCode', 114, '不同的路径', 'unique-paths', 1, 2, 0, 'Easy'),
(2115, 'LintCode', 115, '不同的路径 II', 'unique-paths-ii', 1, 2, 0, 'Easy'),
(2116, 'LintCode', 116, '跳跃游戏', 'jump-game', 1, 1, 0, 'Medium'),
(2117, 'LintCode', 117, '跳跃游戏 II', 'jump-game-ii', 1, 0, 0, 'Medium'),
(2118, 'LintCode', 118, '不同的子序列', 'distinct-subsequences', 1, 0, 0, 'Medium'),
(2119, 'LintCode', 119, '编辑距离', 'edit-distance', 1, 0, 0, 'Medium'),
(2120, 'LintCode', 120, '单词接龙', 'word-ladder', 1, 0, 0, 'Medium'),
(2121, 'LintCode', 121, '单词接龙 II', 'word-ladder-ii', 1, 1, 0, 'Hard'),
(2122, 'LintCode', 122, '直方图最大矩形覆盖', 'largest-rectangle-in-histogram', 1, 0, 0, 'Hard'),
(2123, 'LintCode', 123, '单词搜索', 'word-search', 1, 0, 0, 'Medium'),
(2124, 'LintCode', 124, '最长连续序列', 'longest-consecutive-sequence', 1, 0, 0, 'Medium'),
(2125, 'LintCode', 125, '背包问题 II', 'backpack-ii', 1, 1, 0, 'Medium'),
(2127, 'LintCode', 127, '拓扑排序', 'topological-sorting', 1, 0, 0, 'Medium'),
(2128, 'LintCode', 128, '哈希函数', 'hash-function', 1, 2, 0, 'Easy'),
(2129, 'LintCode', 129, '重哈希', 'rehashing', 1, 1, 0, 'Medium'),
(2130, 'LintCode', 130, '堆化', 'heapify', 1, 0, 0, 'Medium'),
(2131, 'LintCode', 131, '大楼轮廓', 'building-outline-super', 1, 0, 0, 'Super'),
(2132, 'LintCode', 132, '单词搜索 II', 'word-search-ii', 1, 0, 0, 'Hard'),
(2133, 'LintCode', 133, '最长单词', 'longest-words', 1, 1, 0, 'Easy'),
(2134, 'LintCode', 134, 'LRU缓存策略', 'lru-cache', 1, 1, 0, 'Hard'),
(2135, 'LintCode', 135, '数字组合', 'combination-sum', 1, 1, 0, 'Medium'),
(2136, 'LintCode', 136, '分割回文串', 'palindrome-partitioning', 1, 1, 0, 'Medium'),
(2137, 'LintCode', 137, '克隆图', 'clone-graph', 1, 1, 0, 'Medium'),
(2138, 'LintCode', 138, '子数组之和', 'subarray-sum', 1, 2, 0, 'Easy'),
(2139, 'LintCode', 139, '最接近零的子数组和', 'subarray-sum-closest', 1, 1, 0, 'Medium'),
(2140, 'LintCode', 140, '快速幂', 'fast-power', 1, 0, 0, 'Medium'),
(2141, 'LintCode', 141, 'x的平方根', 'sqrtx', 1, 2, 0, 'Easy'),
(2142, 'LintCode', 142, 'O(1)时间检测2的幂次', 'o1-check-power-of-2', 1, 1, 0, 'Easy'),
(2143, 'LintCode', 143, '排颜色 II', 'sort-colors-ii', 1, 1, 0, 'Medium'),
(2144, 'LintCode', 144, '交错正负数', 'interleaving-positive-and-negative-numbers', 1, 0, 0, 'Medium'),
(2148, 'LintCode', 148, '颜色分类', 'sort-colors', 1, 1, 0, 'Medium'),
(2149, 'LintCode', 149, '买卖股票的最佳时机', 'best-time-to-buy-and-sell-stock', 1, 0, 0, 'Medium'),
(2150, 'LintCode', 150, '买卖股票的最佳时机 II', 'best-time-to-buy-and-sell-stock-ii', 1, 0, 0, 'Medium'),
(2151, 'LintCode', 151, '买卖股票的最佳时机 III', 'best-time-to-buy-and-sell-stock-iii', 1, 0, 0, 'Medium'),
(2152, 'LintCode', 152, '组合', 'combinations', 1, 0, 0, 'Medium'),
(2153, 'LintCode', 153, '数字组合 II', 'combination-sum-ii', 1, 1, 0, 'Medium'),
(2154, 'LintCode', 154, '正则表达式匹配', 'regular-expression-matching', 1, 0, 0, 'Hard'),
(2155, 'LintCode', 155, '二叉树的最小深度', 'minimum-depth-of-binary-tree', 1, 1, 0, 'Easy'),
(2156, 'LintCode', 156, '合并区间', 'merge-intervals', 1, 1, 0, 'Easy'),
(2157, 'LintCode', 157, '判断字符串是否没有重复字符', 'unique-characters', 1, 1, 0, 'Easy'),
(2158, 'LintCode', 158, '两个字符串是变位词', 'two-strings-are-anagrams', 1, 1, 0, 'Easy'),
(2159, 'LintCode', 159, '寻找旋转排序数组中的最小值', 'find-minimum-in-rotated-sorted-array', 1, 2, 0, 'Medium'),
(2160, 'LintCode', 160, '寻找旋转排序数组中的最小值 II', 'find-minimum-in-rotated-sorted-array-ii', 1, 1, 0, 'Medium'),
(2161, 'LintCode', 161, '旋转图像', 'rotate-image', 1, 0, 0, 'Medium'),
(2162, 'LintCode', 162, '矩阵归零', 'set-matrix-zeroes', 1, 0, 0, 'Medium'),
(2163, 'LintCode', 163, '不同的二叉查找树', 'unique-binary-search-trees', 1, 0, 0, 'Medium'),
(2164, 'LintCode', 164, '不同的二叉查找树 II', 'unique-binary-search-trees-ii', 1, 0, 0, 'Medium'),
(2165, 'LintCode', 165, '合并两个排序链表', 'merge-two-sorted-lists', 1, 2, 0, 'Easy'),
(2166, 'LintCode', 166, '链表倒数第n个节点', 'nth-to-last-node-in-list', 1, 1, 0, 'Easy'),
(2167, 'LintCode', 167, '链表求和', 'add-two-numbers', 1, 1, 0, 'Easy'),
(2168, 'LintCode', 168, '吹气球', 'burst-balloons', 1, 0, 0, 'Hard'),
(2170, 'LintCode', 170, '旋转链表', 'rotate-list', 1, 0, 0, 'Medium'),
(2171, 'LintCode', 171, '乱序字符串', 'anagrams', 1, 1, 0, 'Medium'),
(2172, 'LintCode', 172, '删除元素', 'remove-element', 1, 1, 0, 'Easy'),
(2173, 'LintCode', 173, '链表插入排序', 'insertion-sort-list', 1, 1, 0, 'Easy'),
(2174, 'LintCode', 174, '删除链表中倒数第n个节点', 'remove-nth-node-from-end-of-list', 1, 1, 0, 'Easy'),
(2175, 'LintCode', 175, '翻转二叉树', 'invert-binary-tree', 3, 1, 0, 'Easy'),
(2176, 'LintCode', 176, '图中两个点之间的路线', 'route-between-two-nodes-in-graph', 1, 0, 0, 'Medium'),
(2177, 'LintCode', 177, '把排序数组转换为高度最小的二叉搜索树', 'convert-sorted-array-to-binary-search-tree-with-minimal-height', 1, 1, 0, 'Easy'),
(2178, 'LintCode', 178, '图是否是树', 'graph-valid-tree', 1, 1, 0, 'Medium'),
(2179, 'LintCode', 179, '更新二进制位', 'update-bits', 1, 0, 0, 'Medium'),
(2180, 'LintCode', 180, '二进制表示', 'binary-representation', 1, 0, 0, 'Hard'),
(2181, 'LintCode', 181, '将整数A转换为B', 'flip-bits', 1, 1, 0, 'Easy'),
(2182, 'LintCode', 182, '删除数字', 'delete-digits', 1, 0, 0, 'Medium'),
(2183, 'LintCode', 183, '木材加工', 'wood-cut', 1, 1, 0, 'Hard'),
(2184, 'LintCode', 184, '最大数', 'largest-number', 1, 0, 0, 'Medium'),
(2185, 'LintCode', 185, '矩阵的之字型遍历', 'matrix-zigzag-traversal', 1, 1, 0, 'Easy'),
(2186, 'LintCode', 186, '最多有多少个点在一条直线上', 'max-points-on-a-line', 1, 0, 0, 'Medium'),
(2187, 'LintCode', 187, '加油站', 'gas-station', 1, 0, 0, 'Medium'),
(2189, 'LintCode', 189, '丢失的第一个正整数', 'first-missing-positive', 1, 0, 0, 'Medium'),
(2190, 'LintCode', 190, '下一个排列', 'next-permutation-ii', 1, 0, 0, 'Medium'),
(2191, 'LintCode', 191, '乘积最大子序列', 'maximum-product-subarray', 1, 0, 0, 'Medium'),
(2192, 'LintCode', 192, '通配符匹配', 'wildcard-matching', 1, 0, 0, 'Hard'),
(2196, 'LintCode', 196, '寻找缺失的数', 'find-the-missing-number', 1, 0, 0, 'Medium'),
(2197, 'LintCode', 197, '排列序号', 'permutation-index', 1, 1, 0, 'Easy'),
(2198, 'LintCode', 198, '排列序号 II', 'permutation-index-ii', 1, 0, 0, 'Medium'),
(2200, 'LintCode', 200, '最长回文子串', 'longest-palindromic-substring', 1, 0, 0, 'Medium'),
(2201, 'LintCode', 201, '线段树的构造', 'segment-tree-build', 1, 0, 0, 'Medium'),
(2202, 'LintCode', 202, '线段树的查询', 'segment-tree-query', 1, 0, 0, 'Medium'),
(2203, 'LintCode', 203, '线段树的修改', 'segment-tree-modify', 1, 0, 0, 'Medium'),
(2204, 'LintCode', 204, '单例', 'singleton', 1, 1, 0, 'Easy'),
(2205, 'LintCode', 205, '区间最小数', 'interval-minimum-number', 1, 0, 0, 'Medium'),
(2206, 'LintCode', 206, '区间求和 I', 'interval-sum', 1, 0, 0, 'Medium'),
(2207, 'LintCode', 207, '区间求和 II', 'interval-sum-ii', 1, 0, 0, 'Hard'),
(2208, 'LintCode', 208, '赋值运算符重载', 'assignment-operator-overloading-c-only', 1, 0, 0, 'Medium'),
(2210, 'LintCode', 210, '结尾的字符串', 'null-terminated-string', 0, 0, 0, 'Easy'),
(2211, 'LintCode', 211, '字符串置换', 'string-permutation', 1, 1, 0, 'Easy'),
(2212, 'LintCode', 212, '空格替换', 'space-replacement', 1, 1, 0, 'Easy'),
(2213, 'LintCode', 213, '字符串压缩', 'string-compression', 0, 0, 0, 'Easy'),
(2216, 'LintCode', 216, '用isSubstring判断字符串的循环移动', 'substring-rotation', 0, 0, 0, 'Easy'),
(2217, 'LintCode', 217, '无序链表的重复项删除', 'remove-duplicates-from-unsorted-list', 0, 0, 0, 'Easy'),
(2221, 'LintCode', 221, '链表求和 II', 'add-two-numbers-ii', 0, 1, 0, 'Medium'),
(2223, 'LintCode', 223, '回文链表', 'palindrome-linked-list', 1, 0, 0, 'Medium'),
(2224, 'LintCode', 224, '用一个数组实现三个栈', 'implement-three-stacks-by-single-array', 0, 0, 0, 'Medium'),
(2226, 'LintCode', 226, '栈集 II', 'set-of-stacks-ii', 0, 0, 0, 'Hard'),
(2227, 'LintCode', 227, '用栈模拟汉诺塔问题', 'mock-hanoi-tower-by-stacks', 1, 1, 0, 'Easy'),
(2229, 'LintCode', 229, '栈排序', 'stack-sorting', 0, 0, 0, 'Medium'),
(2230, 'LintCode', 230, '宠物收养所', 'animal-shelter', 0, 0, 0, 'Hard'),
(2233, 'LintCode', 233, '拥有同样多的1的下一个数', 'next-smaller-and-larger-number-with-the-same-1-bits', 0, 0, 0, 'Medium'),
(2236, 'LintCode', 236, '交换奇偶二进制位', 'swap-bits', 0, 0, 0, 'Easy'),
(2237, 'LintCode', 237, '丢失的数', 'missing-integer', 0, 0, 0, 'Easy'),
(2238, 'LintCode', 238, '黑白屏', 'monochrome-screen', 0, 0, 0, 'Easy'),
(2242, 'LintCode', 242, '将二叉树按照层级转化为链表', 'convert-binary-tree-to-linked-lists-by-depth', 0, 0, 0, 'Easy'),
(2245, 'LintCode', 245, '子树', 'subtree', 1, 1, 0, 'Easy'),
(2246, 'LintCode', 246, '二叉树的路径和 II', 'binary-tree-path-sum-ii', 0, 0, 0, 'Easy'),
(2247, 'LintCode', 247, '线段树查询 II', 'segment-tree-query-ii', 1, 0, 0, 'Medium'),
(2248, 'LintCode', 248, '统计比给定整数小的数的个数', 'count-of-smaller-number', 1, 0, 0, 'Medium'),
(2249, 'LintCode', 249, '统计前面比自己小的数的个数', 'count-of-smaller-number-before-itself', 1, 0, 0, 'Hard'),
(2254, 'LintCode', 254, 'Drop Eggs', 'drop-eggs', 0, 1, 0, 'Easy'),
(2272, 'LintCode', 272, '爬楼梯 II', 'climbing-stairs-ii', 0, 0, 0, 'Easy'),
(2279, 'LintCode', 279, '凑N分钱的方案数', 'number-of-ways-to-represent-n-cents', 0, 0, 0, 'Medium'),
(2283, 'LintCode', 283, '三数之中的最大值', 'max-of-3-numbers', 0, 0, 0, 'Naive'),
(2360, 'LintCode', 360, '滑动窗口的中位数', 'sliding-window-median', 1, 0, 0, 'Hard'),
(2362, 'LintCode', 362, '滑动窗口的最大值', 'sliding-window-maximum-super', 1, 0, 0, 'Super'),
(2363, 'LintCode', 363, '接雨水', 'trapping-rain-water', 1, 0, 0, 'Medium'),
(2365, 'LintCode', 365, '二进制中有多少个1', 'count-1-in-binary', 1, 1, 0, 'Easy'),
(2366, 'LintCode', 366, '斐波纳契数列', 'fibonacci', 1, 1, 0, 'Naive'),
(2367, 'LintCode', 367, '表达树构造', 'expression-tree-build', 1, 0, 0, 'Hard'),
(2368, 'LintCode', 368, '表达式求值', 'expression-evaluation', 1, 0, 0, 'Hard'),
(2370, 'LintCode', 370, '将表达式转换为逆波兰表达式', 'convert-expression-to-reverse-polish-notation', 1, 0, 0, 'Hard'),
(2371, 'LintCode', 371, '用递归打印数字', 'print-numbers-by-recursion', 1, 0, 0, 'Medium'),
(2372, 'LintCode', 372, '在O(1)时间复杂度删除链表节点', 'delete-node-in-the-middle-of-singly-linked-list', 1, 1, 0, 'Easy'),
(2373, 'LintCode', 373, '奇偶分割数组', 'partition-array-by-odd-and-even', 1, 1, 0, 'Easy'),
(2374, 'LintCode', 374, '螺旋矩阵', 'spiral-matrix', 1, 0, 0, 'Medium'),
(2375, 'LintCode', 375, '克隆二叉树', 'clone-binary-tree', 1, 1, 0, 'Easy'),
(2376, 'LintCode', 376, '二叉树的路径和', 'binary-tree-path-sum', 2, 2, 0, 'Easy'),
(2378, 'LintCode', 378, '将二叉查找树转换成双链表', 'convert-binary-search-tree-to-doubly-linked-list', 1, 0, 0, 'Medium'),
(2379, 'LintCode', 379, '将数组重新排序以构造最小值', 'reorder-array-to-construct-the-minimum-number', 1, 0, 0, 'Medium'),
(2380, 'LintCode', 380, '两个链表的交叉', 'intersection-of-two-linked-lists', 1, 0, 0, 'Medium'),
(2381, 'LintCode', 381, '螺旋矩阵 II', 'spiral-matrix-ii', 1, 0, 0, 'Medium'),
(2382, 'LintCode', 382, '三角形计数', 'triangle-count', 1, 0, 0, 'Medium'),
(2383, 'LintCode', 383, '装最多水的容器', 'container-with-most-water', 1, 0, 0, 'Medium'),
(2384, 'LintCode', 384, '最长无重复字符的子串', 'longest-substring-without-repeating-characters', 1, 0, 0, 'Medium'),
(2387, 'LintCode', 387, '最小差', 'the-smallest-difference', 1, 0, 0, 'Medium'),
(2388, 'LintCode', 388, '第k个排列', 'permutation-sequence', 1, 0, 0, 'Medium'),
(2389, 'LintCode', 389, '判断数独是否合法', 'valid-sudoku', 1, 1, 0, 'Easy'),
(2391, 'LintCode', 391, '数飞机', 'number-of-airplanes-in-the-sky', 1, 0, 0, 'Medium'),
(2392, 'LintCode', 392, '打劫房屋', 'house-robber', 1, 0, 0, 'Medium'),
(2393, 'LintCode', 393, '买卖股票的最佳时机 IV', 'best-time-to-buy-and-sell-stock-iv', 1, 0, 0, 'Hard'),
(2394, 'LintCode', 394, '硬币排成线', 'coins-in-a-line', 1, 0, 0, 'Medium'),
(2395, 'LintCode', 395, '硬币排成线 II', 'coins-in-a-line-ii', 1, 0, 0, 'Medium'),
(2397, 'LintCode', 397, '最长上升连续子序列', 'longest-increasing-continuous-subsequence', 1, 1, 0, 'Easy'),
(2399, 'LintCode', 399, 'Nuts和Bolts的问题', 'nuts-bolts-problem', 1, 0, 0, 'Medium'),
(2400, 'LintCode', 400, '最大间距', 'maximum-gap', 1, 0, 0, 'Hard'),
(2401, 'LintCode', 401, '排序矩阵中的从小到大第k个数', 'kth-smallest-number-in-sorted-matrix', 1, 0, 0, 'Medium'),
(2402, 'LintCode', 402, '连续子数组求和', 'continuous-subarray-sum', 1, 0, 0, 'Medium'),
(2405, 'LintCode', 405, '和为零的子矩阵', 'submatrix-sum', 1, 0, 0, 'Medium'),
(2406, 'LintCode', 406, '和大于S的最小子数组', 'minimum-size-subarray-sum', 1, 0, 0, 'Medium'),
(2407, 'LintCode', 407, '加一', 'plus-one', 1, 1, 0, 'Easy'),
(2408, 'LintCode', 408, '二进制求和', 'add-binary', 1, 1, 0, 'Easy'),
(2411, 'LintCode', 411, '格雷编码', 'gray-code', 1, 0, 0, 'Medium'),
(2412, 'LintCode', 412, '分糖果', 'candy', 1, 0, 0, 'Hard'),
(2413, 'LintCode', 413, '反转整数', 'reverse-integer', 1, 1, 0, 'Easy'),
(2414, 'LintCode', 414, '两个整数相除', 'divide-two-integers', 1, 1, 0, 'Medium'),
(2415, 'LintCode', 415, '有效回文串', 'valid-palindrome', 1, 1, 0, 'Easy'),
(2417, 'LintCode', 417, '有效数字', 'valid-number', 1, 0, 0, 'Hard'),
(2418, 'LintCode', 418, '整数转罗马数字', 'integer-to-roman', 1, 0, 0, 'Medium'),
(2419, 'LintCode', 419, '罗马数字转整数', 'roman-to-integer', 1, 0, 0, 'Medium'),
(2420, 'LintCode', 420, '报数', 'count-and-say', 1, 1, 0, 'Easy'),
(2421, 'LintCode', 421, '简化路径', 'simplify-path', 1, 0, 0, 'Medium'),
(2422, 'LintCode', 422, '最后一个单词的长度', 'length-of-last-word', 1, 1, 0, 'Easy'),
(2423, 'LintCode', 423, '有效的括号序列', 'valid-parentheses', 1, 1, 0, 'Easy'),
(2424, 'LintCode', 424, '逆波兰表达式求值', 'evaluate-reverse-polish-notation', 1, 0, 0, 'Medium'),
(2425, 'LintCode', 425, '电话号码的字母组合', 'letter-combinations-of-a-phone-number', 1, 0, 0, 'Medium'),
(2426, 'LintCode', 426, '恢复IP地址', 'restore-ip-addresses', 1, 0, 0, 'Medium'),
(2427, 'LintCode', 427, '生成括号', 'generate-parentheses', 1, 0, 0, 'Medium'),
(2428, 'LintCode', 428, 'x的n次幂', 'powx-n', 1, 0, 0, 'Medium'),
(2430, 'LintCode', 430, '攀爬字符串', 'scramble-string', 1, 0, 0, 'Hard'),
(2433, 'LintCode', 433, '岛屿的个数', 'number-of-islands', 1, 2, 0, 'Easy'),
(2436, 'LintCode', 436, '最大正方形', 'maximal-square', 1, 0, 0, 'Medium'),
(2437, 'LintCode', 437, '书籍复印', 'copy-books', 1, 1, 1, 'Hard'),
(2439, 'LintCode', 439, '线段树的构造 II', 'segment-tree-build-ii', 1, 0, 0, 'Medium'),
(2442, 'LintCode', 442, '实现Trie', 'implement-trie', 1, 0, 0, 'Medium'),
(2445, 'LintCode', 445, '余弦相似度', 'cosine-similarity', 1, 1, 0, 'Easy'),
(2450, 'LintCode', 450, 'K组翻转链表', 'reverse-nodes-in-k-group', 1, 1, 0, 'Hard'),
(2451, 'LintCode', 451, '两两交换链表中的节点', 'swap-nodes-in-pairs', 1, 1, 0, 'Easy'),
(2452, 'LintCode', 452, '删除链表中的元素', 'remove-linked-list-elements', 1, 1, 0, 'Naive'),
(2453, 'LintCode', 453, '将二叉树拆成链表', 'flatten-binary-tree-to-linked-list', 1, 2, 0, 'Easy'),
(2457, 'LintCode', 457, '经典二分查找问题', 'classical-binary-search', 1, 3, 0, 'Easy'),
(2463, 'LintCode', 463, '整数排序', 'sort-integers', 1, 3, 0, 'Naive'),
(2464, 'LintCode', 464, '整数排序 II', 'sort-integers-ii', 1, 2, 0, 'Easy'),
(2469, 'LintCode', 469, '等价二叉树', 'identical-binary-tree', 1, 1, 0, 'Easy'),
(2473, 'LintCode', 473, '单词的添加与查找', 'add-and-search-word', 1, 1, 0, 'Medium'),
(2477, 'LintCode', 477, '被围绕的区域', 'surrounded-regions', 1, 0, 0, 'Medium'),
(2480, 'LintCode', 480, '二叉树的所有路径', 'binary-tree-paths', 2, 2, 0, 'Easy'),
(2488, 'LintCode', 488, '快乐数', 'happy-number', 1, 1, 0, 'Easy'),
(2496, 'LintCode', 496, '玩具工厂', 'toy-factory', 1, 1, 0, 'Easy'),
(2499, 'LintCode', 499, '单词计数(MapReduce版本)', 'word-count-map-reduce', 1, 0, 0, 'Easy'),
(2501, 'LintCode', 501, '迷你推特', 'mini-twitter', 1, 0, 0, 'Medium'),
(2507, 'LintCode', 507, '摆动排序 II', 'wiggle-sort-ii', 1, 0, 0, 'Medium'),
(2508, 'LintCode', 508, '摆动排序', 'wiggle-sort', 1, 0, 0, 'Medium'),
(2510, 'LintCode', 510, '最大矩形', 'maximal-rectangle', 1, 0, 0, 'Hard'),
(2511, 'LintCode', 511, '交换链表当中两个节点', 'swap-two-nodes-in-linked-list', 1, 0, 0, 'Medium'),
(2512, 'LintCode', 512, '解码方法', 'decode-ways', 1, 0, 0, 'Medium'),
(2513, 'LintCode', 513, '完美平方', 'perfect-squares', 1, 1, 0, 'Medium'),
(2514, 'LintCode', 514, '栅栏染色', 'paint-fence', 1, 1, 0, 'Easy'),
(2515, 'LintCode', 515, '房屋染色', 'paint-house', 1, 0, 0, 'Medium'),
(2516, 'LintCode', 516, '房屋染色 II', 'paint-house-ii', 1, 0, 0, 'Hard'),
(2517, 'LintCode', 517, '丑数', 'ugly-number', 1, 1, 0, 'Easy'),
(2518, 'LintCode', 518, '超级丑数', 'super-ugly-number', 1, 0, 0, 'Medium'),
(2524, 'LintCode', 524, '左填充', 'left-pad', 1, 1, 0, 'Easy'),
(2528, 'LintCode', 528, '摊平嵌套的列表', 'flatten-nested-list-iterator', 1, 0, 0, 'Medium'),
(2532, 'LintCode', 532, '逆序对', 'reverse-pairs', 1, 0, 0, 'Medium'),
(2534, 'LintCode', 534, '打劫房屋 II', 'house-robber-ii', 1, 0, 0, 'Medium'),
(2535, 'LintCode', 535, '打劫房屋 III', 'house-robber-iii', 1, 0, 0, 'Medium'),
(2539, 'LintCode', 539, '移动零', 'move-zeroes', 1, 1, 0, 'Easy'),
(2547, 'LintCode', 547, '两数组的交', 'intersection-of-two-arrays', 1, 1, 0, 'Easy'),
(2548, 'LintCode', 548, '两数组的交 II', 'intersection-of-two-arrays-ii', 1, 1, 0, 'Easy'),
(2552, 'LintCode', 552, '创建最大数', 'create-maximum-number', 1, 0, 0, 'Hard'),
(2564, 'LintCode', 564, '背包问题 VI', 'backpack-vi', 1, 1, 0, 'Medium'),
(2569, 'LintCode', 569, '各位相加', 'add-digits', 1, 2, 0, 'Easy'),
(2570, 'LintCode', 570, '寻找丢失的数 II', 'find-the-missing-number-ii', 1, 0, 0, 'Medium'),
(2617, 'LintCode', 617, '最大平均值子数组', 'maximum-average-subarray', 1, 0, 0, 'Medium'),
(2632, 'LintCode', 632, '二叉树的最大节点', 'binary-tree-maximum-node', 2, 1, 0, 'Naive');

--
-- Indexes for dumped tables
--

--
-- Indexes for table `problems`
--
ALTER TABLE `problems`
  ADD PRIMARY KEY (`id`),
  ADD UNIQUE KEY `id` (`id`);
COMMIT;

/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
