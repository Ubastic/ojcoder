Time: 2017/05/20  17:20:25pm
Author: wuxubj@qq.com
Solution: 
class Solution {
public:
    /*
     * @param numbers : An array of Integer
     * @param target : target = numbers[index1] + numbers[index2]
     * @return : [index1+1, index2+1] (index1 < index2)
     */
    vector<int> twoSum(vector<int> &nums, int target) {
        // write your code here
        vector<int>::iterator it, start=nums.begin(), it_rem;
        map<int,int> m;
        vector<int> result;
          
        for(it=nums.begin();it!=nums.end();it++){
            int num=*it;
            int rem=target-num;
     
            if(m[rem]==1){
                it_rem=find(nums.begin(), nums.end(), rem);
                result.push_back(it_rem - start + 1);
                result.push_back(it - start + 1);
                return result;
            }
            else{
               m[num]=1;
            }
        }
    }
};
-------------------------------------------------------------------------------------


Time: 2017/05/20  17:30:09pm
Author: 11
Solution: 
/*
Title:
Description:
*/
11
//Write solution here
-------------------------------------------------------------------------------------


Time: 2017/05/20  17:40:28pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here
using namespace std;
int main(int argc, char **argv)
{
    return 0;
}
-------------------------------------------------------------------------------------


Time: 2017/05/20  17:56:45pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution hererrr
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:22:46pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here1
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:22:55pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:23:25pm
Author: 1
Solution: 
/*
Title:
Description:
*/

//Write solution here
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:30:40pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:35:35pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:37:20pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:37:46pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here111
-------------------------------------------------------------------------------------


Time: 2017/05/24  23:42:15pm
Author: wuxubj@qq.com
Solution: 
/*
Title:
Description:
*/

//Write solution here
class Solution {
public:
    vector<int> twoSum(vector<int>& nums, int target) {
        unordered_map<int, int> m;
        for (int i = 0; i < nums.size(); ++i) {
            if (m.count(target - nums[i])) {
                return {m[target - nums[i]] , i};
            }
            m[nums[i]] = i;
        }
        return {};
    }
};
-------------------------------------------------------------------------------------


Time: 2017/05/25  19:40:38pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/25  19:42:08pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2017/05/26  11:22:08am
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here111
-------------------------------------------------------------------------------------


Time: 2017/05/27  14:39:53pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution hereq
-------------------------------------------------------------------------------------


Time: 2017/06/02  16:21:11pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write soluti
-------------------------------------------------------------------------------------


Time: 2017/06/05  17:03:42pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here搜索
-------------------------------------------------------------------------------------


Time: 2017/07/25  16:14:19pm
Author: 1368108133@qq.com
Solution: 
class Solution(object):
    def canWinNim(self, n):
        """
        :type n: int
        :rtype: bool
        """
        return bool(n%4)
-------------------------------------------------------------------------------------


Time: 2017/07/25  21:22:36pm
Author: 1368108133@qq.com
Solution: 
/*
Title:LeetCode283
Description:
*/

//Write solution here
if nums:
    n = 0
    for i,x in enumerate(nums):
        if x == 0:
            n += 1
        else:
            nums[i - n] = x
    for i in range(1,n+1):
        nums[-i] = 0
-------------------------------------------------------------------------------------


Time: 2017/07/26  09:59:17am
Author: 
Solution: 
/*
Title:LeetCode169
Description:
*/

//Write solution here
class Solution(object):
    def majorityElement(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        count = {}
        for i,x in enumerate(nums):
            if count.has_key(x):
                count[x] += 1
            else:
                count[x] = 1
        c = 0
        val = 0
        for i,x in enumerate(count.keys()):
            if count[x] > c:
                c = count[x]
                val = x
        return val
-------------------------------------------------------------------------------------


Time: 2017/09/03  13:08:35pm
Author: dinjufen@163.com
Solution: 
class Solution:
    """
    @param: s: A string
    @return: A string
    """
    def reverseWords(self, s):
        # write your code here
        string = ''
        slist = []
        lenth = len(s)
        i = 0
        j = 0
        if s:
            while i < lenth and j < lenth:
                while j < lenth and s[j] != ' ':
                    j += 1
                slist.append(s[i:j])
                i = j
                while i < lenth and s[i] == ' ':
                    i += 1
                j = i
            for word in reversed(slist):
                string += word
                string += " "
        return string
-------------------------------------------------------------------------------------


Time: 2017/09/25  22:14:06pm
Author: 1026783506@qq.com
Solution: 
/*
Title:671循环单词
Description:The words are same rotate words if rotate the word to the right by loop, and get another. Count how many different rotate word sets in dictionary.

E.g. picture and turepic are same rotate words.

 Notice

所有单词均为小写。

Have you met this question in a real interview? Yes
Example
Given dict = ["picture", "turepic", "icturep", "word", "ordw", "lint"]
return 3.

"picture", "turepic", "icturep" are same ratote words.
"word", "ordw" are same too.
"lint" is the third word that different from the previous two words.
*/

//Write solution here
class Solution:
    """
    @param: words: A list of words
    @return: Return how many different rotate words
    """
    def countRotateWords(self, words):
        # Write your code here
        if len(words)<2:return len(words)
        x=self.bu(words[0],[])
        count=1
        for i in words:
           if i in x:continue
           else:
                count+=1
                x=self.bu(i,x)
        return count
    """
    bu()函数：该单词所有的循环结果，由于给出的数据不是按顺序的
    所以有可能最后一个是第一个的循环单词
    a代表新添加的单词，b为已经存放的循环单词
    """
    def bu(self,a,b):
        m=len(a)
        a=a+a
        for i in range(m):
            b.append(a[i:m+i])
        return b
-------------------------------------------------------------------------------------


Time: 2017/10/07  22:13:46pm
Author: 15829000454@163.com
Solution: 
/*
Title:最长回文串
Description:
*/

//Write solution here
public class Solution {
    /*
     * @param s: a string which consists of lowercase or uppercase letters
     * @return: the length of the longest palindromes that can be built
     */
    public int longestPalindrome(String s) {
        // write your code here
        if (s == null){
            return 0;
        }
        HashMap<Character, Integer> hashMap = new HashMap<>();
        char[] array = s.toCharArray();
        for (int i = 0; i < array.length; i++){
            Integer integer = hashMap.get(array[i]);
            if (integer != null){
                hashMap.put(array[i], integer + 1);
            }
            else {
                hashMap.put(array[i], 1);
            }
        }
        if (hashMap.size() == 1){
            return s.length();
        }
        int result = 0;
        boolean b = false;
        boolean c = false;
        for (HashMap.Entry<Character, Integer> entry : hashMap.entrySet()){
            if (entry.getValue() == 1){
                b = true;
            }
            else if (entry.getValue() % 2 == 0){
                result += entry.getValue();
            }
            else if (entry.getValue() % 2 == 1) {
                c = true;
                result += entry.getValue() - 1;
            }
        }
        if (b){
            return result + 1;
        }
        else if (c){
            return result + 1;
        }
        return result;
    }
}
-------------------------------------------------------------------------------------


Time: 2017/10/15  13:16:55pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here9787107320071
-------------------------------------------------------------------------------------


Time: 2017/10/29  14:37:12pm
Author: 3034089596
Solution: 
/*
Title:
Description:
*/
public class Solution {
    /*
     * @param A: sorted integer array A which has m elements, but size of A is m+n
     * @param m: An integer
     * @param B: sorted integer array B which has n elements
     * @param n: An integer
     * @return: nothing
     */
    public void mergeSortedArray(int[] A, int m, int[] B, int n) {
        // write your code here
         
     
       
        for(int i=0;i<n;i++)
        {
            A[m+i]=B[i];
        }
        Arrays.sort(A);
    }
}
//Write solution here
-------------------------------------------------------------------------------------


Time: 2017/11/11  18:32:41pm
Author: 
Solution: 
/*
Title:判断是否为平方数之和
Description:给一个整数 c, 你需要判断是否存在两个整数 a 和 b 使得 a^2 + b^2 = c.
*/

//Write solution here
public class Solution {
    /*
     * @param : the given number
     * @return: whether whether there're two integers
     */
    public boolean checkSumOfSquareNumbers(int num) {
        // write your code here
        if(num<0){
            return false;
        }
        Map<Integer,Integer> map = new HashMap<>();
        int tmp = (int)Math.sqrt(num);  
        if(tmp * tmp == num){  
            return true;  
        }  
        for(int i = 0; i <= tmp; i++){  
            map.put(i*i,i*i); 
        }  
        for(int i = tmp; i >= tmp/2; i--){  
            if(map.get(i*i)!=null){
            if(map.containsKey(num - map.get(i*i))){  
                return true;  
            }  
        }  
        }
        return false;  
    }  
       
    
};
-------------------------------------------------------------------------------------


Time: 2017/11/11  22:37:34pm
Author: 
Solution: 
/*
Title:最长回文串
Description:给出一个包含大小写字母的字符串。求出由这些字母构成的最长的回文串的长度是多少。

数据是大小写敏感的，也就是说，"Aa" 并不会被认为是一个回文串。
*/

//Write solution here
public class Solution {
    /*
     * @param s: a string which consists of lowercase or uppercase letters
     * @return: the length of the longest palindromes that can be built
     */
    public int longestPalindrome(String s) {
        // write your code here
        int size = 0 ;
        int max = 0;
        char[] charArr = s.toCharArray();
        int count[] = new int[128];
        for(int i=0;i<charArr.length;i++){
            count[charArr[i]]++;
        }
        
        for(int i=0;i<128;i++){
            if(count[i]%2==0){
                size += count[i];
            }else if(count[i]%2!=0&&count[i]>max){
                if(max!=0)
                size  = size + max -1;
                max = count[i];
            }else{
                size +=count[i]-1;
            }
        }
        
        return size+max;
    }
}
-------------------------------------------------------------------------------------


Time: 2018/03/02  15:49:43pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here11
-------------------------------------------------------------------------------------


Time: 2018/03/02  15:50:05pm
Author: 
Solution: 
/*
Title:q
Description:
*/

//Write solution here
-------------------------------------------------------------------------------------


Time: 2018/03/02  15:50:12pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution hereq
-------------------------------------------------------------------------------------


Time: 2018/03/02  18:49:08pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here1
-------------------------------------------------------------------------------------


Time: 2018/04/14  16:35:41pm
Author: 1533729254
Solution: 
/*
Title:
Description:
*/

//Write solution here
public class Solution {
    /**
     * @param number: A 3-digit number.
     * @return: Reversed number.
     */
    public int reverseInteger(int number) {
       int a = number/100;
	   int b = number/10;
	   int c = number;
	   return c*100+b*10+a;	
    }
}
-------------------------------------------------------------------------------------


Time: 2018/05/21  18:34:14pm
Author: 
Solution: 
/*
Title:
Description:
*/

//Write solution here通融通融同仁堂
-------------------------------------------------------------------------------------


